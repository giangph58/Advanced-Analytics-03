{"value":"{\"aid\": \"http://arxiv.org/abs/2503.24135v1\", \"title\": \"PixelCAM: Pixel Class Activation Mapping for Histology Image\\n  Classification and ROI Localization\", \"summary\": \"Weakly supervised object localization (WSOL) methods allow training models to\\nclassify images and localize ROIs. WSOL only requires low-cost image-class\\nannotations yet provides a visually interpretable classifier, which is\\nimportant in histology image analysis. Standard WSOL methods rely on class\\nactivation mapping (CAM) methods to produce spatial localization maps according\\nto a single- or two-step strategy. While both strategies have made significant\\nprogress, they still face several limitations with histology images.\\nSingle-step methods can easily result in under- or over-activation due to the\\nlimited visual ROI saliency in histology images and the limited localization\\ncues. They also face the well-known issue of asynchronous convergence between\\nclassification and localization tasks. The two-step approach is sub-optimal\\nbecause it is tied to a frozen classifier, limiting the capacity for\\nlocalization. Moreover, these methods also struggle when applied to\\nout-of-distribution (OOD) datasets. In this paper, a multi-task approach for\\nWSOL is introduced for simultaneous training of both tasks to address the\\nasynchronous convergence problem. In particular, localization is performed in\\nthe pixel-feature space of an image encoder that is shared with classification.\\nThis allows learning discriminant features and accurate delineation of\\nforeground/background regions to support ROI localization and image\\nclassification. We propose PixelCAM, a cost-effective foreground/background\\npixel-wise classifier in the pixel-feature space that allows for spatial object\\nlocalization. PixelCAM is trained using pixel pseudo-labels collected from a\\npretrained WSOL model. Both image and pixel-wise classifiers are trained\\nsimultaneously using standard gradient descent. In addition, our pixel\\nclassifier can easily be integrated into CNN- and transformer-based\\narchitectures without any modifications.\", \"main_category\": \"cs.CV\", \"categories\": \"cs.CV\", \"published\": \"2025-03-31T14:18:01Z\"}"}
