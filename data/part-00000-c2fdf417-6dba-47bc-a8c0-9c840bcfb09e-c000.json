{"value":"{\"aid\": \"http://arxiv.org/abs/2503.21710v1\", \"title\": \"Enhancing Repository-Level Software Repair via Repository-Aware\\n  Knowledge Graphs\", \"summary\": \"Repository-level software repair faces challenges in bridging semantic gaps\\nbetween issue descriptions and code patches. Existing approaches, which mostly\\ndepend on large language models (LLMs), suffer from semantic ambiguities,\\nlimited structural context understanding, and insufficient reasoning\\ncapability. To address these limitations, we propose KGCompass with two\\ninnovations: (1) a novel repository-aware knowledge graph (KG) that accurately\\nlinks repository artifacts (issues and pull requests) and codebase entities\\n(files, classes, and functions), allowing us to effectively narrow down the\\nvast search space to only 20 most relevant functions with accurate candidate\\nbug locations and contextual information, and (2) a path-guided repair\\nmechanism that leverages KG-mined entity path, tracing through which allows us\\nto augment LLMs with relevant contextual information to generate precise\\npatches along with their explanations. Experimental results in the\\nSWE-Bench-Lite demonstrate that KGCompass achieves state-of-the-art repair\\nperformance (45.67%) and function-level localization accuracy (51.33%) across\\nopen-source approaches, costing only $0.20 per repair. Our analysis reveals\\nthat among successfully localized bugs, 69.7% require multi-hop traversals\\nthrough the knowledge graph, without which LLM-based approaches struggle to\\naccurately locate bugs. The knowledge graph built in KGCompass is language\\nagnostic and can be incrementally updated, making it a practical solution for\\nreal-world development environments.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-03-27T17:21:47Z\"}"}
