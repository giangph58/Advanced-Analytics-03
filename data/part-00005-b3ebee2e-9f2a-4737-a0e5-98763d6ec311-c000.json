{"value":"{\"aid\": \"http://arxiv.org/abs/2504.05851v1\", \"title\": \"Identifying and Replicating Code Patterns Driving Performance\\n  Regressions in Software Systems\", \"summary\": \"Context: Performance regressions negatively impact execution time and memory\\nusage of software systems. Nevertheless, there is a lack of systematic methods\\nto evaluate the effectiveness of performance test suites. Performance mutation\\ntesting, which introduces intentional defects (mutants) to measure and enhance\\nfault-detection capabilities, is promising but underexplored. A key challenge\\nis understanding if generated mutants accurately reflect real-world performance\\nissues. Goal: This study evaluates and extends mutation operators for\\nperformance testing. Its objectives include (i) collecting existing performance\\nmutation operators, (ii) introducing new operators from real-world code changes\\nthat impact performance, and (iii) evaluating these operators on real-world\\nsystems to see if they effectively degrade performance. Method: To this aim, we\\nwill (i) review the literature to identify performance mutation operators, (ii)\\nconduct a mining study to extract patterns of code changes linked to\\nperformance regressions, (iii) propose new mutation operators based on these\\npatterns, and (iv) apply and evaluate the operators to assess their\\neffectiveness in exposing performance degradations. Expected Outcomes: We aim\\nto provide an enriched set of mutation operators for performance testing,\\nhelping developers and researchers identify harmful coding practices and design\\nbetter strategies to detect and prevent performance regressions.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-08T09:28:46Z\"}"}
