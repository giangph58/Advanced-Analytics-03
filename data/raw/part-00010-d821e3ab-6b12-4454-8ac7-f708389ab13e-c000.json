{"value":"{\"aid\": \"http://arxiv.org/abs/2504.01379v1\", \"title\": \"DESIL: Detecting Silent Bugs in MLIR Compiler Infrastructure\", \"summary\": \"MLIR (Multi-Level Intermediate Representation) compiler infrastructure\\nprovides an efficient framework for introducing a new abstraction level for\\nprogramming languages and domain-specific languages. It has attracted\\nwidespread attention in recent years and has been applied in various domains,\\nsuch as deep learning compiler construction. Recently, several MLIR compiler\\nfuzzing techniques, such as MLIRSmith and MLIRod, have been proposed. However,\\nnone of them can detect silent bugs, i.e., bugs that incorrectly optimize code\\nsilently. The difficulty in detecting silent bugs arises from two main aspects:\\n(1) UB-Free Program Generation: Ensures the generated programs are free from\\nundefined behaviors to suit the non-UB assumptions required by compiler\\noptimizations. (2) Lowering Support: Converts the given MLIR program into an\\nexecutable form, enabling execution result comparisons, and selects a suitable\\nlowering path for the program to reduce redundant lowering pass and improve the\\nefficiency of fuzzing. To address the above issues, we propose DESIL. DESIL\\nenables silent bug detection by defining a set of UB-elimination rules based on\\nthe MLIR documentation and applying them to input programs to produce UB-free\\nMLIR programs. To convert dialects in MLIR program into the executable form,\\nDESIL designs a lowering path optimization strategy to convert the dialects in\\ngiven MLIR program into executable form. Furthermore, DESIL incorporates the\\ndifferential testing for silent bug detection. To achieve this, it introduces\\nan operation-aware optimization recommendation strategy into the compilation\\nprocess to generate diverse executable files. We applied DESIL to the latest\\nrevisions of the MLIR compiler infrastructure. It detected 23 silent bugs and\\n19 crash bugs, of which 12/14 have been confirmed or fixed\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-02T05:48:51Z\"}"}
