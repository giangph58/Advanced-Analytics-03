{"value":"{\"aid\": \"http://arxiv.org/abs/2504.16670v1\", \"title\": \"Open Source Software Lifecycle Classification: Developing Wrangling\\n  Techniques for Complex Sociotechnical Systems\", \"summary\": \"Open source software is a rapidly evolving center for distributed work, and\\nunderstanding the characteristics of this work across its different contexts is\\nvital for informing policy, economics, and the design of enabling software. The\\nsteep increase in open source projects and corporate participation have\\ntransformed a peripheral, cottage industry component of the global technology\\necosystem into a large, infinitely complex \\\"technology parts supplier\\\" wired\\ninto every corner of contemporary life. The lack of theory and tools for\\nbreaking this complexity down into identifiable project types or strategies for\\nunderstanding them more systematically is incommensurate with current industry,\\nsociety, and developer needs. This paper reviews previous attempts to classify\\nopen source software and other organizational ecosystems, using open source\\nscientific software ecosystems in contrast with those found in corporatized\\nopen source software. It then examines the divergent and sometimes conflicting\\npurposes that may exist for classifying open source projects and how these\\ncompeting interests impede our progress in developing a comprehensive\\nunderstanding of how open source software projects and companies operate.\\nFinally, we will present an empirical, mixed-methods study demonstrating how to\\nclassify open-source projects by their lifecycle position. This is the first\\nstep forward, advancing our scientific and practical knowledge of open source\\nsoftware through the lens of dynamic and evolving open source genres. It\\nconcludes with examples and a proposed path forward.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE,cs.HC,H.4\", \"published\": \"2025-04-23T12:37:53Z\"}"}
