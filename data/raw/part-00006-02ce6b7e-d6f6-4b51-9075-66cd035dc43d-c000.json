{"value":"{\"aid\": \"http://arxiv.org/abs/2504.19537v1\", \"title\": \"Universally Wheeler Languages\", \"summary\": \"The notion of Wheeler languages is rooted in the Burrows-Wheeler transform\\n(BWT), one of the most central concepts in data compression and indexing. The\\nBWT has been generalized to finite automata, the so-called Wheeler automata, by\\nGagie et al. [Theor. Comput. Sci. 2017]. Wheeler languages have subsequently\\nbeen defined as the class of regular languages for which there exists a Wheeler\\nautomaton accepting them. Besides their advantages in data indexing, these\\nWheelerlanguages also satisfy many interesting properties from a language\\ntheoretic point of view [Alanko et al., Inf. Comput. 2021]. A characteristic\\nyet unsatisfying feature of Wheeler languages however is that their definition\\ndepends on a fixed order of the alphabet. In this paper we introduce the\\nUniversally Wheeler languages UW, i.e., the regular languages that are Wheeler\\nwith respect to all orders of a given alphabet. Our first main contribution is\\nto relate UW to some very well known regular language classes. We first show\\nthat the Striclty Locally Testable languages are strictly included in UW. After\\nnoticing that UW is not closed under taking the complement, we prove that the\\nclass of languages for which both the language and its complement are in UW\\nexactly coincides with those languages that are Definite or Reverse Definite.\\nSecondly, we prove that deciding if a regular language given by a DFA is in UW\\ncan be done in quadratic time. We also show that this is optimal unless the\\nStrong Exponential Time Hypothesis (SETH) fails.\", \"main_category\": \"cs.FL\", \"categories\": \"cs.FL\", \"published\": \"2025-04-28T07:40:16Z\"}"}
