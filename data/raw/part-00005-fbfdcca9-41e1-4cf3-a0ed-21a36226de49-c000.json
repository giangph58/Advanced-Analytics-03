{"value":"{\"aid\": \"http://arxiv.org/abs/2504.21538v1\", \"title\": \"Coyote v2: Raising the Level of Abstraction for Data Center FPGAs\", \"summary\": \"In the trend towards hardware specialization, FPGAs play a dual role as\\naccelerators for offloading, e.g., network virtualization, and as a vehicle for\\nprototyping and exploring hardware designs. While FPGAs offer versatility and\\nperformance, integrating them in larger systems remains challenging. Thus,\\nrecent efforts have focused on raising the level of abstraction through better\\ninterfaces and high-level programming languages. Yet, there is still quite some\\nroom for improvement. In this paper, we present Coyote v2, an open source FPGA\\nshell built with a novel, three-layer hierarchical design supporting dynamic\\npartial reconfiguration of services and user logic, with a unified logic\\ninterface, and high-level software abstractions such as support for\\nmultithreading and multitenancy. Experimental results indicate Coyote v2\\nreduces synthesis times between 15% and 20% and run-time reconfiguration times\\nby an order of magnitude, when compared to existing systems. We also\\ndemonstrate the advantages of Coyote v2 by deploying several realistic\\napplications, including HyperLogLog cardinality estimation, AES encryption, and\\nneural network inference. Finally, Coyote v2 places a great deal of emphasis on\\nintegration with real systems through reusable and reconfigurable services,\\nincluding a fully RoCE v2-compliant networking stack, a shared virtual memory\\nmodel with the host, and a DMA engine between FPGAs and GPUs. We demonstrate\\nthese features by, e.g., seamlessly deploying an FPGA-accelerated neural\\nnetwork from Python.\", \"main_category\": \"cs.AR\", \"categories\": \"cs.AR\", \"published\": \"2025-04-30T11:35:20Z\"}"}
