{"value":"{\"aid\": \"http://arxiv.org/abs/2504.19757v1\", \"title\": \"vMODB: Unifying event and data management for distributed asynchronous\\n  applications\", \"summary\": \"Event-driven architecture (EDA) has emerged as a crucial architectural\\npattern for scalable cloud applications. However, its asynchronous and\\ndecoupled nature introduces challenges for meeting transactional requirements.\\nDatabase systems, relegated to serving as storage engines for individual\\ncomponents, do not recognize transactions that span multiple components in\\nEDAs. In contrast, messaging systems are unaware of the components' application\\nstates. Weaving such asynchronous and independent EDA components forces\\ndevelopers to relinquish transactional guarantees, resulting in data\\nconsistency issues. To address this challenge, we design vMODB, a distributed\\nframework that enables the implementation of highly consistent and scalable\\ncloud applications without compromising the envisioned benefits of EDA. We\\npropose Virtual Micro Service (VMS), a novel programming model that provides\\nfamiliar constructs to enable developers to specify the data model,\\nconstraints, and concurrency semantics of components, as well as transactions\\nand data dependencies that span across components. vMODB leverages VMS\\nsemantics to enforce ACID properties by transparently unifying event logs and\\nstate management into a common event-driven execution framework. Our\\nexperiments using two benchmarks show that vMODB outperforms a widely adopted\\nstate-of-the-art competing framework that only offers eventual consistency by\\nup to 3X. With its high performance, familiar programming constructs, and ACID\\nproperties, vMODB will significantly simplify the development of highly\\nconsistent and efficient EDAs.\", \"main_category\": \"cs.DB\", \"categories\": \"cs.DB,cs.SE\", \"published\": \"2025-04-28T12:55:36Z\"}"}
