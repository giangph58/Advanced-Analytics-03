{"value":"{\"aid\": \"http://arxiv.org/abs/2504.15115v1\", \"title\": \"Deterministic $k$-Median Clustering in Near-Optimal Time\", \"summary\": \"The metric $k$-median problem is a textbook clustering problem. As input, we\\nare given a metric space $V$ of size $n$ and an integer $k$, and our task is to\\nfind a subset $S \\\\subseteq V$ of at most $k$ `centers' that minimizes the total\\ndistance from each point in $V$ to its nearest center in $S$.\\n  Mettu and Plaxton [UAI'02] gave a randomized algorithm for $k$-median that\\ncomputes a $O(1)$-approximation in $\\\\tilde O(nk)$ time. They also showed that\\nany algorithm for this problem with a bounded approximation ratio must have a\\nrunning time of $\\\\Omega(nk)$. Thus, the running time of their algorithm is\\noptimal up to polylogarithmic factors.\\n  For deterministic $k$-median, Guha et al.~[FOCS'00] gave an algorithm that\\ncomputes a $\\\\text{poly}(\\\\log (n/k))$-approximation in $\\\\tilde O(nk)$ time,\\nwhere the degree of the polynomial in the approximation is unspecified. To the\\nbest of our knowledge, this remains the state-of-the-art approximation of any\\ndeterministic $k$-median algorithm with this running time.\\n  This leads us to the following natural question: What is the best\\napproximation of a deterministic $k$-median algorithm with near-optimal running\\ntime? We make progress in answering this question by giving a deterministic\\nalgorithm that computes a $O(\\\\log(n/k))$-approximation in $\\\\tilde O(nk)$ time.\\nWe also provide a lower bound showing that any deterministic algorithm with\\nthis running time must have an approximation ratio of $\\\\Omega(\\\\log n/(\\\\log k +\\n\\\\log \\\\log n))$, establishing a gap between the randomized and deterministic\\nsettings for $k$-median.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS\", \"published\": \"2025-04-21T14:10:20Z\"}"}
