{"value":"{\"aid\": \"http://arxiv.org/abs/2504.12790v1\", \"title\": \"Empirically Evaluating the Use of Bytecode for Diversity-Based Test Case\\n  Prioritisation\", \"summary\": \"Regression testing assures software correctness after changes but is\\nresource-intensive. Test Case Prioritisation (TCP) mitigates this by ordering\\ntests to maximise early fault detection. Diversity-based TCP prioritises\\ndissimilar tests, assuming they exercise different system parts and uncover\\nmore faults. Traditional static diversity-based TCP approaches (i.e., methods\\nthat utilise the dissimilarity of tests), like the state-of-the-art FAST\\napproach, rely on textual diversity from test source code, which is effective\\nbut inefficient due to its relative verbosity and redundancies affecting\\nsimilarity calculations. This paper is the first to study bytecode as the basis\\nof diversity in TCP, leveraging its compactness for improved efficiency and\\naccuracy. An empirical study on seven Defects4J projects shows that bytecode\\ndiversity improves fault detection by 2.3-7.8% over text-based TCP. It is also\\n2-3 orders of magnitude faster in one TCP approach and 2.5-6 times faster in\\nFAST-based TCP. Filtering specific bytecode instructions improves efficiency up\\nto fourfold while maintaining effectiveness, making bytecode diversity a\\nsuperior static approach.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-17T09:40:49Z\"}"}
