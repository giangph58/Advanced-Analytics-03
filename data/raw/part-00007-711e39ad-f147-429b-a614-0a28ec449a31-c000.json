{"value":"{\"aid\": \"http://arxiv.org/abs/2504.17536v1\", \"title\": \"Dynamic Membership for Regular Tree Languages\", \"summary\": \"We study the dynamic membership problem for regular tree languages under\\nrelabeling updates: we fix an alphabet ${\\\\Sigma}$ and a regular tree language\\n$L$ over ${\\\\Sigma}$ (expressed, e.g., as a tree automaton), we are given a tree\\n$T$ with labels in ${\\\\Sigma}$, and we must maintain the information of whether\\nthe tree $T$ belongs to $L$ while handling relabeling updates that change the\\nlabels of individual nodes in $T$. (The shape and size of the tree remain the\\nsame throughout.)\\n  Our first contribution is to show that this problem admits an $O(\\\\log n /\\n\\\\log \\\\log n)$ algorithm for any fixed regular tree language, improving over\\nknown algorithms that achieve $O(\\\\log n)$. This generalizes the known $O(\\\\log n\\n/ \\\\log \\\\log n)$ upper bound over words, and it matches the lower bound of\\n${\\\\Omega}(\\\\log n / \\\\log \\\\log n)$ from dynamic membership to some word languages\\nand from the existential marked ancestor problem.\\n  Our second contribution is to introduce a class of regular languages, dubbed\\nalmost-commutative tree languages, and show that dynamic membership to such\\nlanguages under relabeling updates can be done in constant time per update.\\nAlmost-commutative languages generalize both commutative languages and finite\\nlanguages, and they are the analogue for trees of the ZG languages enjoying\\nconstant-time dynamic membership over words. Our main technical contribution is\\nto show that this class is conditionally optimal when we assume that the\\nalphabet features a neutral letter, i.e., a letter that has no effect on\\nmembership to the language. More precisely, we show that any regular tree\\nlanguage with a neutral letter which is not almost-commutative cannot be\\nmaintained in constant time under the assumption that prefix-U1 problem from\\n(Amarilli, Jachiet, Paperman, ICALP'21) also does not admit a constant-time\\nalgorithm.\", \"main_category\": \"cs.FL\", \"categories\": \"cs.FL,cs.DS\", \"published\": \"2025-04-24T13:26:08Z\"}"}
