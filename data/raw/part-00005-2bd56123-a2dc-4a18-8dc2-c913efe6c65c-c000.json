{"value":"{\"aid\": \"http://arxiv.org/abs/2504.21280v1\", \"title\": \"Device-Algorithm Co-Design of Ferroelectric Compute-in-Memory In-Situ\\n  Annealer for Combinatorial Optimization Problems\", \"summary\": \"Combinatorial optimization problems (COPs) are crucial in many applications\\nbut are computationally demanding. Traditional Ising annealers address COPs by\\ndirectly converting them into Ising models (known as direct-E transformation)\\nand solving them through iterative annealing. However, these approaches require\\nvector-matrix-vector (VMV) multiplications with a complexity of $O(n^2)$ for\\nIsing energy computation and complex exponential annealing factor calculations\\nduring annealing process, thus significantly increasing hardware costs. In this\\nwork, we propose a ferroelectric compute-in-memory (CiM) in-situ annealer to\\novercome aforementioned challenges. The proposed device-algorithm co-design\\nframework consists of (i) a novel transformation method (first to our known)\\nthat converts COPs into an innovative incremental-E form, which reduces the\\ncomplexity of VMV multiplication from $O(n^2)$ to $O(n)$, and approximates\\nexponential annealing factor with a much simplified fractional form; (ii) a\\ndouble gate ferroelectric FET (DG FeFET)-based CiM crossbar that efficiently\\ncomputes the in-situ incremental-E form by leveraging the unique structure of\\nDG FeFETs; (iii) %When feasible solutions are detected, a CiM annealer that\\napproaches the solutions of COPs via iterative incremental-E computations\\nwithin a tunable back gate-based in-situ annealing flow. Evaluation results\\nshow that our proposed CiM annealer significantly reduces hardware overhead,\\nreducing energy consumption by 1503/1716$\\\\times$ and time cost by\\n8.08/8.15$\\\\times$ in solving 3000-node Max-Cut problems compared to two\\nstate-of-the-art annealers. It also exhibits high solving efficiency, achieving\\na remarkable average success rate of 98\\\\%, whereas other annealers show only\\n50\\\\% given the same iteration counts.\", \"main_category\": \"cs.ET\", \"categories\": \"cs.ET\", \"published\": \"2025-04-30T03:23:33Z\"}"}
