{"value":"{\"aid\": \"http://arxiv.org/abs/2505.00458v1\", \"title\": \"Memory-Centric Computing: Solving Computing's Memory Problem\", \"summary\": \"Computing has a huge memory problem. The memory system, consisting of\\nmultiple technologies at different levels, is responsible for most of the\\nenergy consumption, performance bottlenecks, robustness problems, monetary\\ncost, and hardware real estate of a modern computing system. All this becomes\\nworse as modern and emerging applications become more data-intensive (as we\\nreadily witness in e.g., machine learning, genome analysis, graph processing,\\nand data analytics), making the memory system an even larger bottleneck. In\\nthis paper, we discuss two major challenges that greatly affect computing\\nsystem performance and efficiency: 1) memory technology & capacity scaling (at\\nthe lower device and circuit levels) and 2) system and application performance\\n& energy scaling (at the higher levels of the computing stack). We demonstrate\\nthat both types of scaling have become extremely difficult, wasteful, and\\ncostly due to the dominant processor-centric design & execution paradigm of\\ncomputers, which treats memory as a dumb and inactive component that cannot\\nperform any computation. We show that moving to a memory-centric design &\\nexecution paradigm can solve the major challenges, while enabling multiple\\nother potential benefits. In particular, we demonstrate that: 1) memory\\ntechnology scaling problems (e.g., RowHammer, RowPress, Variable Read\\nDisturbance, data retention, and other issues awaiting to be discovered) can be\\nmuch more easily and efficiently handled by enabling memory to autonomously\\nmanage itself; 2) system and application performance & energy efficiency can,\\nat the same time, be improved by orders of magnitude by enabling computation\\ncapability in memory chips and structures (i.e., processing in memory). We\\ndiscuss adoption challenges against enabling memory-centric computing, and\\ndescribe how we can get there step-by-step via an evolutionary path.\", \"main_category\": \"cs.AR\", \"categories\": \"cs.AR,cs.DC\", \"published\": \"2025-05-01T11:16:09Z\"}"}
