{"value":"{\"aid\": \"http://arxiv.org/abs/2504.20412v1\", \"title\": \"CrashFixer: A crash resolution agent for the Linux kernel\", \"summary\": \"Code large language models (LLMs) have shown impressive capabilities on a\\nmultitude of software engineering tasks. In particular, they have demonstrated\\nremarkable utility in the task of code repair. However, common benchmarks used\\nto evaluate the performance of code LLMs are often limited to small-scale\\nsettings. In this work, we build upon kGym, which shares a benchmark for\\nsystem-level Linux kernel bugs and a platform to run experiments on the Linux\\nkernel.\\n  This paper introduces CrashFixer, the first LLM-based software repair agent\\nthat is applicable to Linux kernel bugs. Inspired by the typical workflow of a\\nkernel developer, we identify the key capabilities an expert developer\\nleverages to resolve a kernel crash. Using this as our guide, we revisit the\\nkGym platform and identify key system improvements needed to practically run\\nLLM-based agents at the scale of the Linux kernel (50K files and 20M lines of\\ncode). We implement these changes by extending kGym to create an improved\\nplatform - called kGymSuite, which will be open-sourced. Finally, the paper\\npresents an evaluation of various repair strategies for such complex kernel\\nbugs and showcases the value of explicitly generating a hypothesis before\\nattempting to fix bugs in complex systems such as the Linux kernel. We also\\nevaluated CrashFixer's capabilities on still open bugs, and found at least two\\npatch suggestions considered plausible to resolve the reported bug.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE,cs.AI,cs.OS\", \"published\": \"2025-04-29T04:18:51Z\"}"}
