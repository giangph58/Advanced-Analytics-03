{"value":"{\"aid\": \"http://arxiv.org/abs/2504.20855v1\", \"title\": \"Online General Knapsack with Reservation Costs\", \"summary\": \"In the online general knapsack problem, an algorithm is presented with an\\nitem $x=(s,v)$ of size $s$ and value $v$ and must irrevocably choose to pack\\nsuch an item into the knapsack or reject it before the next item appears. The\\ngoal is to maximize the total value of the packed items without overflowing the\\nknapsack's capacity.\\n  As this classical setting is way too harsh for many real-life applications,\\nwe will analyze the online general knapsack problem under the reservation\\nmodel. Here, instead of accepting or rejecting an item immediately, an\\nalgorithm can delay the decision of whether to pack the item by paying a\\nfraction $0\\\\le \\\\alpha$ of the size or the value of the item. This models many\\npractical applications, where, for example, decisions can be delayed for some\\ncosts e.g. cancellation fees. We present results for both variants: First, for\\ncosts depending on the size of the items and then for costs depending on the\\nvalue of the items.\\n  If the reservation costs depend on the size of the items, we find a matching\\nupper and lower bound of $2$ for every $\\\\alpha$. On the other hand, if the\\nreservation costs depend on the value of the items, we find that no algorithm\\nis competitive for reservation costs larger than $1/2$ of the item value, and\\nwe find upper and lower bounds for the rest of the reservation range\\n$0\\\\le\\\\alpha< 1/2$.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS\", \"published\": \"2025-04-29T15:24:29Z\"}"}
