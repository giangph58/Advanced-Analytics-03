{"value":"{\"aid\": \"http://arxiv.org/abs/2504.15742v1\", \"title\": \"Proving Cypher Query Equivalence\", \"summary\": \"Graph database systems store graph data as nodes and relationships, and\\nutilize graph query languages (e.g., Cypher) for efficiently querying graph\\ndata. Proving the equivalence of graph queries is an important foundation for\\noptimizing graph query performance, ensuring graph query reliability, etc.\\nAlthough researchers have proposed many SQL query equivalence provers for\\nrelational database systems, these provers cannot be directly applied to prove\\nthe equivalence of graph queries. The difficulty lies in the fact that graph\\nquery languages (e.g., Cypher) adopt significantly different data models\\n(property graph model vs. relational model) and query patterns (graph pattern\\nmatching vs. tabular tuple calculus) from SQL.\\n  In this paper, we propose GraphQE, an automated prover to determine whether\\ntwo Cypher queries are semantically equivalent. We design a U-semiring based\\nCypher algebraic representation to model the semantics of Cypher queries. Our\\nCypher algebraic representation is built on the algebraic structure of\\nunbounded semirings, and can sufficiently express nodes and relationships in\\nproperty graphs and complex Cypher queries. Then, determining the equivalence\\nof two Cypher queries is transformed into determining the equivalence of the\\ncorresponding Cypher algebraic representations, which can be verified by SMT\\nsolvers. To evaluate the effectiveness of GraphQE, we construct a dataset\\nconsisting of 148 pairs of equivalent Cypher queries. Among them, we have\\nsuccessfully proven 138 pairs of equivalent Cypher queries, demonstrating the\\neffectiveness of GraphQE.\", \"main_category\": \"cs.DB\", \"categories\": \"cs.DB,cs.SE\", \"published\": \"2025-04-22T09:45:37Z\"}"}
