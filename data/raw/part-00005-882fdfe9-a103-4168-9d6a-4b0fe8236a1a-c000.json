{"value":"{\"aid\": \"http://arxiv.org/abs/2505.05057v1\", \"title\": \"Towards Mitigating API Hallucination in Code Generated by LLMs with\\n  Hierarchical Dependency Aware\", \"summary\": \"Application Programming Interfaces (APIs) are crucial in modern software\\ndevelopment. Large Language Models (LLMs) assist in automated code generation\\nbut often struggle with API hallucination, including invoking non-existent APIs\\nand misusing existing ones in practical development scenarios. Existing studies\\nresort to Retrieval-Augmented Generation (RAG) methods for mitigating the\\nhallucination issue, but tend to fail since they generally ignore the\\nstructural dependencies in practical projects and do not indeed validate\\nwhether the generated APIs are available or not. To address these limitations,\\nwe propose MARIN, a framework for mitigating API hallucination in code\\ngenerated by LLMs with hierarchical dependency aware. MARIN consists of two\\nphases: Hierarchical Dependency Mining, which analyzes local and global\\ndependencies of the current function, aiming to supplement comprehensive\\nproject context in LLMs input, and Dependency Constrained Decoding, which\\nutilizes mined dependencies to adaptively constrain the generation process,\\naiming to ensure the generated APIs align with the projects specifications. To\\nfacilitate the evaluation of the degree of API hallucination, we introduce a\\nnew benchmark APIHulBench and two new metrics including Micro Hallucination\\nNumber (MiHN) and Macro Hallucination Rate (MaHR). Experiments on six\\nstate-of-the-art LLMs demonstrate that MARIN effectively reduces API\\nhallucinations, achieving an average decrease of 67.52% in MiHN and 73.56% in\\nMaHR compared to the RAG approach. Applied to Huaweis internal projects and two\\nproprietary LLMs, MARIN achieves average decreases of 57.33% in MiHN and 59.41%\\nin MaHR.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-05-08T08:48:17Z\"}"}
