{"value":"{\"aid\": \"http://arxiv.org/abs/2504.07589v1\", \"title\": \"Copy-and-Paste? Identifying EVM-Inequivalent Code Smells in Multi-chain\\n  Reuse Contracts\", \"summary\": \"As the development of Solidity contracts on Ethereum, more developers are\\nreusing them on other compatible blockchains. However, developers may overlook\\nthe differences between the designs of the blockchain system, such as the Gas\\nMechanism and Consensus Protocol, leading to the same contracts on different\\nblockchains not being able to achieve consistent execution as on Ethereum. This\\ninconsistency reveals design flaws in reused contracts, exposing code smells\\nthat hinder code reusability, and we define this inconsistency as\\nEVM-Inequivalent Code Smells. In this paper, we conducted the first empirical\\nstudy to reveal the causes and characteristics of EVM-Inequivalent Code Smells.\\nTo ensure the identified smells reflect real developer concerns, we collected\\nand analyzed 1,379 security audit reports and 326 Stack Overflow posts related\\nto reused contracts on EVM-compatible blockchains, such as Binance Smart Chain\\n(BSC) and Polygon. Using the open card sorting method, we defined six types of\\nEVM-Inequivalent Code Smells. For automated detection, we developed a tool\\nnamed EquivGuard. It employs static taint analysis to identify key paths from\\ndifferent patterns and uses symbolic execution to verify path reachability. Our\\nanalysis of 905,948 contracts across six major blockchains shows that\\nEVM-Inequivalent Code Smells are widespread, with an average prevalence of\\n17.70%. While contracts with code smells do not necessarily lead to financial\\nloss and attacks, their high prevalence and significant asset management\\nunderscore the potential threats of reusing these smelly Ethereum contracts.\\nThus, developers are advised to abandon Copy-and-Paste programming practices\\nand detect EVM-Inequivalent Code Smells before reusing Ethereum contracts.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-10T09:37:19Z\"}"}
