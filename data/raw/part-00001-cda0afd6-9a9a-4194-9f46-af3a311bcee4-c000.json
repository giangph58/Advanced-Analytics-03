{"value":"{\"aid\": \"http://arxiv.org/abs/2504.01543v1\", \"title\": \"Local Computation Algorithms for Knapsack: impossibility results, and\\n  how to avoid them\", \"summary\": \"Local Computation Algorithms (LCA), as introduced by Rubinfeld, Tamir, Vardi,\\nand Xie (2011), are a type of ultra-efficient algorithms which, given access to\\na (large) input for a given computational task, are required to provide fast\\nquery access to a consistent output solution, without maintaining a state\\nbetween queries. This paradigm of computation in particular allows for hugely\\ndistributed algorithms, where independent instances of a given LCA provide\\nconsistent access to a common output solution.\\n  The past decade has seen a significant amount of work on LCAs, by and large\\nfocusing on graph problems. In this paper, we initiate the study of Local\\nComputation Algorithms for perhaps the archetypal combinatorial optimization\\nproblem, Knapsack. We first establish strong impossibility results, ruling out\\nthe existence of any non-trivial LCA for Knapsack as several of its\\nrelaxations. We then show how equipping the LCA with additional access to the\\nKnapsack instance, namely, weighted item sampling, allows one to circumvent\\nthese impossibility results, and obtain sublinear-time and query LCAs. Our\\npositive result draws on a connection to the recent notion of reproducibility\\nfor learning algorithms (Impagliazzo, Lei, Pitassi, and Sorrell, 2022), a\\nconnection we believe to be of independent interest for the design of LCAs.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS\", \"published\": \"2025-04-02T09:32:18Z\"}"}
