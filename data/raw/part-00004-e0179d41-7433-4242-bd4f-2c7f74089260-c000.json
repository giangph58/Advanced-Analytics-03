{"value":"{\"aid\": \"http://arxiv.org/abs/2505.04549v1\", \"title\": \"Fast Pattern Matching with Epsilon Transitions\", \"summary\": \"In the String Matching in Labeled Graphs (SMLG) problem, we need to determine\\nwhether a pattern string appears on a given labeled graph or a given automaton.\\nUnder the Orthogonal Vectors hypothesis, the SMLG problem cannot be solved in\\nsubquadratic time [ICALP 2019]. In typical bioinformatics applications, pattern\\nmatching algorithms should be both fast and space-efficient, so we need to\\ndetermine useful classes of graphs on which the SLMG problem can be solved\\nefficiently.\\n  In this paper, we improve on a recent result [STACS 2024] that shows how to\\nsolve the SMLG problem in linear time on the compressed representation of\\nWheeler generalized automata, a class of string-labeled automata that extend de\\nBruijn graphs. More precisely, we show how to remove the assumption that the\\nautomata contain no $ \\\\epsilon $-transitions (namely, edges labeled with the\\nempty string), while retaining the same time and space bounds. This is a\\nsignificant improvement because $ \\\\epsilon $-transitions add considerable\\nexpressive power (making it possible to jump to multiple states for free) and\\ncapture the complexity of regular expressions (through Thompson's construction\\nfor converting a regular expression into an equivalent automaton). We prove\\nthat, to enable $ \\\\epsilon $-transitions, we only need to store two additional\\nbitvectors that can be constructed in linear time.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS\", \"published\": \"2025-05-07T16:31:21Z\"}"}
