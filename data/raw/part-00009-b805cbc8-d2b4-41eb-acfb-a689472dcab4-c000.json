{"value":"{\"aid\": \"http://arxiv.org/abs/2504.10318v1\", \"title\": \"Shield Bash: Abusing Defensive Coherence State Retrieval to Break Timing\\n  Obfuscation\", \"summary\": \"Microarchitectural attacks are a significant concern, leading to many\\nhardware-based defense proposals. However, different defenses target different\\nclasses of attacks, and their impact on each other has not been fully\\nconsidered. To raise awareness of this problem, we study an interaction between\\ntwo state-of-the art defenses in this paper, timing obfuscations of remote\\ncache lines (TORC) and delaying speculative changes to remote cache lines\\n(DSRC). TORC mitigates cache-hit based attacks and DSRC mitigates speculative\\ncoherence state change attacks.\\n  We observe that DSRC enables coherence information to be retrieved into the\\nprocessor core, where it is out of the reach of timing obfuscations to protect.\\nThis creates an unforeseen consequence that redo operations can be triggered\\nwithin the core to detect the presence or absence of remote cache lines, which\\nconstitutes a security vulnerability. We demonstrate that a new covert channel\\nattack is possible using this vulnerability. We propose two ways to mitigate\\nthe attack, whose performance varies depending on an application's cache usage.\\nOne way is to never send remote exclusive coherence state (E) information to\\nthe core even if it is created. The other way is to never create a remote E\\nstate, which is responsible for triggering redos.\\n  We demonstrate the timing difference caused by this microarchitectural\\ndefense assumption violation using GEM5 simulations. Performance evaluation on\\nSPECrate 2017 and PARSEC benchmarks of the two fixes show less than 32\\\\%\\naverage overhead across both sets of benchmarks. The repair which prevented the\\ncreation of remote E state had less than 2.8% average overhead.\", \"main_category\": \"cs.CR\", \"categories\": \"cs.CR,cs.AR\", \"published\": \"2025-04-14T15:27:32Z\"}"}
