{"value":"{\"aid\": \"http://arxiv.org/abs/2504.16624v1\", \"title\": \"Compositional Active Learning of Synchronous Systems through Automated\\n  Alphabet Refinement\", \"summary\": \"Active automata learning infers automaton models of systems from behavioral\\nobservations, a technique successfully applied to a wide range of domains.\\nCompositional approaches for concurrent systems have recently emerged. We take\\na significant step beyond available results, including those by the authors,\\nand develop a general technique for compositional learning of a synchronizing\\nparallel system with an unknown decomposition. Our approach automatically\\nrefines the global alphabet into component alphabets while learning the\\ncomponent models. We develop a theoretical treatment of distributions of\\nalphabets, i.e., sets of possibly overlapping component alphabets. We\\ncharacterize counter-examples that reveal inconsistencies with global\\nobservations, and show how to systematically update the distribution to restore\\nconsistency. We present a compositional learning algorithm implementing these\\nideas, where learning counterexamples precisely correspond to distribution\\ncounterexamples under well-defined conditions. We provide an implementation,\\ncalled CoalA, using the state-of-the-art active learning library LearnLib. Our\\nexperiments show that in more than 630 subject systems, CoalA delivers orders\\nof magnitude improvements (up to five orders) in membership queries and in\\nsystems with significant concurrency, it also achieves better scalability in\\nthe number of equivalence queries.\", \"main_category\": \"cs.LG\", \"categories\": \"cs.LG,cs.FL\", \"published\": \"2025-04-23T11:30:01Z\"}"}
