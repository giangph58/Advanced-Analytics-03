{"value":"{\"aid\": \"http://arxiv.org/abs/2504.16896v1\", \"title\": \"Memory-efficient Sketch Acceleration for Handling Large Network Flows on\\n  FPGAs\", \"summary\": \"Sketch-based algorithms for network traffic monitoring have drawn increasing\\ninterest in recent years due to their sub-linear memory efficiency and high\\naccuracy. As the volume of network traffic grows, software-based sketch\\nimplementations cannot match the throughput of the incoming network flows.\\nFPGA-based hardware sketch has shown better performance compared to software\\nrunning on a CPU when handling these packets. Among the various sketch\\nalgorithms, Count-min sketch is one of the most popular and efficient. However,\\ndue to the limited amount of on-chip memory, the FPGA-based count-Min sketch\\naccelerator suffers from performance drops as network traffic grows. In this\\nwork, we propose a hardware-friendly architecture with a variable width memory\\ncounter for count-min sketch. Our architecture provides a more compact design\\nto store the sketch data structure effectively, allowing us to support larger\\nhash tables and reduce overestimation errors. The design makes use of a\\nP4-based programmable data plane and the AMD OpenNIC shell. The design is\\nimplemented and verified on the Open Cloud Testbed running on AMD Alveo U280s\\nand can keep up with the 100 Gbit link speed.\", \"main_category\": \"cs.AR\", \"categories\": \"cs.AR,cs.NI\", \"published\": \"2025-04-23T17:24:58Z\"}"}
