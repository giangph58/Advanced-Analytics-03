{"value":"{\"aid\": \"http://arxiv.org/abs/2504.19519v1\", \"title\": \"FlashOverlap: A Lightweight Design for Efficiently Overlapping\\n  Communication and Computation\", \"summary\": \"Generative models have achieved remarkable success across various\\napplications, driving the demand for multi-GPU computing. Inter-GPU\\ncommunication becomes a bottleneck in multi-GPU computing systems, particularly\\non consumer-grade GPUs. By exploiting concurrent hardware execution,\\noverlapping computation and communication latency is an effective technique for\\nmitigating the communication overhead. We identify that an efficient and\\nadaptable overlapping design should satisfy (1) tile-wise overlapping to\\nmaximize the overlapping opportunity, (2) interference-free computation to\\nmaintain the original computational performance, and (3) communication\\nagnosticism to reduce the development burden against varying communication\\nprimitives. Nevertheless, current designs fail to simultaneously optimize for\\nall of those features.\\n  To address the issue, we propose FlashOverlap, a lightweight design\\ncharacterized by tile-wise overlapping, interference-free computation, and\\ncommunication agnosticism. FlashOverlap utilizes a novel signaling mechanism to\\nidentify tile-wise data dependency without interrupting the computation\\nprocess, and reorders data to contiguous addresses, enabling communication by\\nsimply calling NCCL APIs. Experiments show that such a lightweight design\\nachieves up to 1.65x speedup, outperforming existing works in most cases.\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC,cs.CL,cs.LG\", \"published\": \"2025-04-28T06:37:57Z\"}"}
