{"value":"{\"aid\": \"http://arxiv.org/abs/2505.00665v1\", \"title\": \"Auditing without Leaks Despite Curiosity\", \"summary\": \"\\\\textit{Auditing} data accesses helps preserve privacy and ensures\\naccountability by allowing one to determine who accessed (potentially\\nsensitive) information. A prior formal definition of register auditability was\\nbased on the values returned by read operations, \\\\emph{without accounting for\\ncases where a reader might learn a value without explicitly reading it or gain\\nknowledge of data access without being an auditor}.\\n  This paper introduces a refined definition of auditability that focuses on\\nwhen a read operation is \\\\emph{effective}, rather than relying on its\\ncompletion and return of a value. Furthermore, we formally specify the\\nconstraints that \\\\textit{prevent readers from learning values they did not\\nexplicitly read or from auditing other readers' accesses.}\\n  Our primary algorithmic contribution is a wait-free implementation of a\\n\\\\emph{multi-writer, multi-reader register} that tracks effective reads while\\npreventing unauthorized audits. The key challenge is ensuring that a read is\\nauditable as soon as it becomes effective, which we achieve by combining value\\naccess and access logging into a single atomic operation. Another challenge is\\nrecording accesses without exposing them to readers, which we address using a\\nsimple encryption technique (one-time pad).\\n  We extend this implementation to an \\\\emph{auditable max register} that tracks\\nthe largest value ever written. The implementation deals with the additional\\nchallenge posed by the max register semantics, which allows readers to learn\\nprior values without reading them.\\n  The max register, in turn, serves as the foundation for implementing an\\n\\\\emph{auditable snapshot} object and, more generally, \\\\emph{versioned types}.\\nThese extensions maintain the strengthened notion of auditability,\\nappropriately adapted from multi-writer, multi-reader registers.\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC,cs.CR\", \"published\": \"2025-05-01T17:15:04Z\"}"}
