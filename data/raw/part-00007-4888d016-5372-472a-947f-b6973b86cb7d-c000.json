{"value":"{\"aid\": \"http://arxiv.org/abs/2505.05009v1\", \"title\": \"Learning Partitions with Optimal Query and Round Complexities\", \"summary\": \"We consider the basic problem of learning an unknown partition of $n$\\nelements into at most $k$ sets using simple queries that reveal information\\nabout a small subset of elements. Our starting point is the well-studied\\npairwise same-set queries which ask if a pair of elements belong to the same\\nclass. It is known that non-adaptive algorithms require $\\\\Theta(n^2)$ queries,\\nwhile adaptive algorithms require $\\\\Theta(nk)$ queries, and the best known\\nalgorithm uses $k-1$ rounds. This problem has been studied extensively over the\\nlast two decades in multiple communities due to its fundamental nature and\\nrelevance to clustering, active learning, and crowd sourcing. In many\\napplications, it is of high interest to reduce adaptivity while minimizing\\nquery complexity. We give a complete characterization of the deterministic\\nquery complexity of this problem as a function of the number of rounds, $r$,\\ninterpolating between the non-adaptive and adaptive settings: for any constant\\n$r$, the query complexity is\\n$\\\\Theta(n^{1+\\\\frac{1}{2^r-1}}k^{1-\\\\frac{1}{2^r-1}})$. Our algorithm only needs\\n$O(\\\\log \\\\log n)$ rounds to attain the optimal $O(nk)$ query complexity.\\n  Next, we consider two generalizations of pairwise queries to subsets $S$ of\\nsize at most $s$: (1) weak subset queries which return the number of classes\\nintersected by $S$, and (2) strong subset queries which return the entire\\npartition restricted on $S$. Once again in crowd sourcing applications, queries\\non large sets may be prohibitive. For non-adaptive algorithms, we show\\n$\\\\Omega(n^2/s^2)$ strong queries are needed. Perhaps surprisingly, we show that\\nthere is a non-adaptive algorithm using weak queries that matches this bound up\\nto log-factors for all $s \\\\leq \\\\sqrt{n}$. More generally, we obtain nearly\\nmatching upper and lower bounds for algorithms using subset queries in terms of\\nboth the number of rounds, $r$, and the query size bound, $s$.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS\", \"published\": \"2025-05-08T07:27:29Z\"}"}
