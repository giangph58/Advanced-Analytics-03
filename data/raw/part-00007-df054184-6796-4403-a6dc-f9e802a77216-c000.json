{"value":"{\"aid\": \"http://arxiv.org/abs/2504.16473v1\", \"title\": \"ERASER: Efficient RTL FAult Simulation Framework with Trimmed Execution\\n  Redundancy\", \"summary\": \"As intelligent computing devices increasingly integrate into human life,\\nensuring the functional safety of the corresponding electronic chips becomes\\nmore critical. A key metric for functional safety is achieving a sufficient\\nfault coverage. To meet this requirement, extensive time-consuming fault\\nsimulation of the RTL code is necessary during the chip design phase.The main\\noverhead in RTL fault simulation comes from simulating behavioral nodes (always\\nblocks). Due to the limited fault propagation capacity, fault simulation\\nresults often match the good simulation results for many behavioral nodes. A\\nkey strategy for accelerating RTL fault simulation is the identification and\\nelimination of redundant simulations. Existing methods detect redundant\\nexecutions by examining whether the fault inputs to each RTL node are\\nconsistent with the good inputs. However, we observe that this input comparison\\nmechanism overlooks a significant amount of implicit redundant execution:\\nalthough the fault inputs differ from the good inputs, the node's execution\\nresults remain unchanged. Our experiments reveal that this overlooked redundant\\nexecution constitutes nearly half of the total execution overhead of behavioral\\nnodes, becoming a significant bottleneck in current RTL fault simulation. The\\nunderlying reason for this overlooked redundancy is that, in these cases, the\\ntrue execution paths within the behavioral nodes are not affected by the\\nchanges in input values. In this work, we propose a behavior-level redundancy\\ndetection algorithm that focuses on the true execution paths. Building on the\\nelimination of redundant executions, we further developed an efficient RTL\\nfault simulation framework, Eraser.Experimental results show that compared to\\ncommercial tools, under the same fault coverage, our framework achieves a 3.9\\n$\\\\times$ improvement in simulation performance on average.\", \"main_category\": \"cs.AR\", \"categories\": \"cs.AR\", \"published\": \"2025-04-23T07:33:44Z\"}"}
