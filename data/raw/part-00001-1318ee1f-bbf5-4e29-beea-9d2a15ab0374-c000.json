{"value":"{\"aid\": \"http://arxiv.org/abs/2504.21770v1\", \"title\": \"LASHED: LLMs And Static Hardware Analysis for Early Detection of RTL\\n  Bugs\", \"summary\": \"While static analysis is useful in detecting early-stage hardware security\\nbugs, its efficacy is limited because it requires information to form checks\\nand is often unable to explain the security impact of a detected vulnerability.\\nLarge Language Models can be useful in filling these gaps by identifying\\nrelevant assets, removing false violations flagged by static analysis tools,\\nand explaining the reported violations. LASHED combines the two approaches\\n(LLMs and Static Analysis) to overcome each other's limitations for hardware\\nsecurity bug detection. We investigate our approach on four open-source SoCs\\nfor five Common Weakness Enumerations (CWEs) and present strategies for\\nimprovement with better prompt engineering. We find that 87.5% of instances\\nflagged by our recommended scheme are plausible CWEs. In-context learning and\\nasking the model to 'think again' improves LASHED's precision.\", \"main_category\": \"cs.CR\", \"categories\": \"cs.CR\", \"published\": \"2025-04-30T16:15:53Z\"}"}
