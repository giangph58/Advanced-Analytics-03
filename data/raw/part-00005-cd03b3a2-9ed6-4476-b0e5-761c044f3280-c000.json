{"value":"{\"aid\": \"http://arxiv.org/abs/2504.17646v1\", \"title\": \"Portability of Optimizations from SC to TSO\", \"summary\": \"It is well recognized that the safety of compiler optimizations is at risk in\\na concurrent context. Existing approaches primarily rely on context-free\\nthread-local guarantees, and prohibit optimizations that introduce a data-race.\\nHowever, compilers utilize global context-specific information, exposing safe\\noptimizations that may violate such guarantees as well as introduce a race.\\nSuch optimizations need to individually be proven safe for each language model.\\nAn alternate approach to this would be proving them safe for an intuitive model\\n(like interleaving semantics), and then determine their portability across\\nother concurrent models. In this paper, we address this problem of porting\\nacross models of concurrency. We first identify a global guarantee on\\noptimizations portable from Sequential Consistency (SC) to Total Store Order\\n(TSO). Our guarantee is in the form of constraints specifying the syntactic\\nchanges an optimization must not incur. We then show these constraints\\ncorrelate to prohibiting the introduction of triangular races, a subset of\\ndata-race relevant to TSO. We conclude by showing how such race inducing\\noptimizations relate to porting across Strong Release Acquire (SRA), a known\\ncausally consistent memory model.\", \"main_category\": \"cs.PL\", \"categories\": \"cs.PL\", \"published\": \"2025-04-24T15:16:17Z\"}"}
