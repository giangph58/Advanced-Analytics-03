{"value":"{\"aid\": \"http://arxiv.org/abs/2504.02790v1\", \"title\": \"Dynamic Treewidth in Logarithmic Time\", \"summary\": \"We present a dynamic data structure that maintains a tree decomposition of\\nwidth at most $9k+8$ of a dynamic graph with treewidth at most $k$, which is\\nupdated by edge insertions and deletions. The amortized update time of our data\\nstructure is $2^{O(k)} \\\\log n$, where $n$ is the number of vertices. The data\\nstructure also supports maintaining any ``dynamic programming scheme'' on the\\ntree decomposition, providing, for example, a dynamic version of Courcelle's\\ntheorem with $O_{k}(\\\\log n)$ amortized update time; the $O_{k}(\\\\cdot)$ notation\\nhides factors that depend on $k$. This improves upon a result of Korhonen,\\nMajewski, Nadara, Pilipczuk, and Soko{\\\\l}owski [FOCS 2023], who gave a similar\\ndata structure but with amortized update time $2^{k^{O(1)}} n^{o(1)}$.\\nFurthermore, our data structure is arguably simpler.\\n  Our main novel idea is to maintain a tree decomposition that is ``downwards\\nwell-linked'', which allows us to implement local rotations and analysis\\nsimilar to those for splay trees.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS\", \"published\": \"2025-04-03T17:37:46Z\"}"}
