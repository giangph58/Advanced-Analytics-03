{"value":"{\"aid\": \"http://arxiv.org/abs/2504.21502v1\", \"title\": \"Concurrency Constrained Scheduling with Tree-Like Constraints\", \"summary\": \"This paper investigates concurrency-constrained scheduling problems, where\\nthe objective is to construct a schedule for a set of jobs subject to\\nconcurrency restrictions. Formally, we are given a conflict graph $G$ defined\\nover a set of $n$ jobs, where an edge between two jobs in $G$ indicates that\\nthese jobs cannot be executed concurrently. Each job may have distinct\\nattributes, such as processing time, due date, weight, and release time. The\\ngoal is to determine a schedule that optimizes a specified scheduling criterion\\nwhile adhering to all concurrency constraints. This framework offers a\\nversatile model for analyzing resource allocation problems where processes\\ncompete for shared resources, such as access to shared memory. From a\\ntheoretical perspective, it encompasses several classical graph coloring\\nproblems, including Chromatic Number, Sum Coloring, and Interval Chromatic\\nNumber.\\n  Given that even the simplest concurrency-constrained scheduling problems are\\nNP-hard for general conflict graphs, this study focuses on conflict graphs with\\nbounded treewidth. Our results establish a dichotomy: Some problems in this\\nsetting can be solved in FPT time, while others are shown to be XALP-complete\\nfor treewidth as parameter. Along the way, we generalize several previously\\nknown results on coloring problems for bounded treewidth graphs. Several of the\\nFPT algorithms are based on the insight that completion times are bounded by\\nthe Grundy number of the conflict graph - the fact that this number is bounded\\nby the product of treewidth and the logarithm of the number of vertices then\\nleads to the FPT time bound.\", \"main_category\": \"cs.DM\", \"categories\": \"cs.DM,cs.CC\", \"published\": \"2025-04-30T10:43:15Z\"}"}
