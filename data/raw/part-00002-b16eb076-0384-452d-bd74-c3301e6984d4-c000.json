{"value":"{\"aid\": \"http://arxiv.org/abs/2504.11081v1\", \"title\": \"DPS: Design Pattern Summarisation Using Code Features\", \"summary\": \"Automatic summarisation has been used efficiently in recent years to condense\\ntexts, conversations, audio, code, and various other artefacts. A range of\\nmethods, from simple template-based summaries to complex machine learning\\ntechniques -- and more recently, large language models -- have been employed to\\ngenerate these summaries. Summarising software design patterns is important\\nbecause it helps developers quickly understand and reuse complex design\\nconcepts, thereby improving software maintainability and development\\nefficiency. However, the generation of summaries for software design patterns\\nhas not yet been explored. Our approach utilises code features and JavaParser\\nto parse the code and create a JSON representation. Using an NLG library on\\nthis JSON representation, we convert it into natural language text that acts as\\na summary of the code, capturing the contextual information of the design\\npattern. Our empirical results indicate that the summaries generated by our\\napproach capture the context in which patterns are applied in the codebase.\\nStatistical evaluations demonstrate that our summaries closely align with\\nhuman-written summaries, as evident from high values in the ROUGE-L, BLEU-4,\\nNIST, and FrugalScore metrics. A follow-up survey further shows that DPS\\nsummaries were rated as capturing context better than human-generated\\nsummaries.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE,D.2\", \"published\": \"2025-04-15T11:27:44Z\"}"}
