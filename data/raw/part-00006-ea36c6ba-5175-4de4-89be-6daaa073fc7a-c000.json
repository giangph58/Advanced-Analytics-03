{"value":"{\"aid\": \"http://arxiv.org/abs/2505.05118v1\", \"title\": \"Enhancing Text2Cypher with Schema Filtering\", \"summary\": \"Knowledge graphs represent complex data using nodes, relationships, and\\nproperties. Cypher, a powerful query language for graph databases, enables\\nefficient modeling and querying. Recent advancements in large language models\\nallow translation of natural language questions into Cypher queries -\\nText2Cypher. A common approach is incorporating database schema into prompts.\\nHowever, complex schemas can introduce noise, increase hallucinations, and\\nraise computational costs. Schema filtering addresses these challenges by\\nincluding only relevant schema elements, improving query generation while\\nreducing token costs. This work explores various schema filtering methods for\\nText2Cypher task and analyzes their impact on token length, performance, and\\ncost. Results show that schema filtering effectively optimizes Text2Cypher,\\nespecially for smaller models. Consistent with prior research, we find that\\nlarger models benefit less from schema filtering due to their longer context\\ncapabilities. However, schema filtering remains valuable for both larger and\\nsmaller models in cost reduction.\", \"main_category\": \"cs.DB\", \"categories\": \"cs.DB,cs.LG\", \"published\": \"2025-05-08T10:42:20Z\"}"}
