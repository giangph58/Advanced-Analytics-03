{"value":"{\"aid\": \"http://arxiv.org/abs/2504.10901v1\", \"title\": \"Design and Verification of a Synchronus First In First Out (FIFO)\", \"summary\": \"This project focuses on designing and verifying a synchronous FIFO First In\\nFirst Out (FIFO) memory, a critical component in digital systems for temporary\\ndata storage and seamless data transfer. The FIFO operates under a single clock\\ndomain, ensuring synchronized read and write operations, making it suitable for\\nsystems requiring high-speed, reliable data buffering. This design includes\\nFIFO's key features, such as read and write operations, full and empty flag\\ngeneration, and pointer management for memory control. The FIFO was implemented\\nusing Verilog to define the Register Transfer Level (RTL) design, ensuring\\nfunctionality and timing requirements were met. For verification, three\\napproaches were employed: (1) UVM-based Verification: A Universal Verification\\nMethodology (UVM) testbench was developed to test the FIFO design rigorously.\\nThe testbench includes components like interface, sequence item, driver,\\nmonitor, scoreboard, agent, and environment. Directed and random tests were\\nperformed to verify corner cases, such as simultaneous reads and writes, full\\nand empty conditions, and overflow and underflow scenarios; (2) Traditional\\nVerilog Testbench: A standalone Verilog testbench was also used to validate the\\nfunctionality of the FIFO through directed test scenarios and waveform\\nanalysis; (3) FPGA implementation: Additionally, the design was implemented on\\nan FPGA for real-time testing to verify its functionality and timing behavior\\nin hardware. FPGA-based verification ensured the design performed as expected\\nunder practical conditions. The results confirmed the correct operation of the\\nFIFO, including accurate data transfer, flag behavior, and timing\\nsynchronization. The project successfully demonstrated the robustness and\\nreliability of the synchronous FIFO design, highlighting its importance in\\nmodern digital systems for efficient data handling and buffering.\", \"main_category\": \"cs.CE\", \"categories\": \"cs.CE\", \"published\": \"2025-04-15T06:23:09Z\"}"}
