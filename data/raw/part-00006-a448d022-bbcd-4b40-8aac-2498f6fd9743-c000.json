{"value":"{\"aid\": \"http://arxiv.org/abs/2504.17336v1\", \"title\": \"Operational Semantics for Crystality: A Smart Contract Language for\\n  Parallel EVMs\", \"summary\": \"The increasing demand for scalable blockchain has driven research into\\nparallel execution models for smart contracts. Crystality is a novel smart\\ncontract programming language designed for parallel Ethereum Virtual Machines\\n(EVMs), enabling fine-grained concurrency through Programmable Contract Scopes\\nand Asynchronous Functional Relay. This paper presents the first formal\\nstructural operational semantics for Crystality, providing a rigorous framework\\nto reason about its execution. We mechanize the syntax and semantics of\\nCrystality in the theorem-proving assistant Coq, enabling formal verification\\nof correctness properties. As a case study, we verify a simplified token\\ntransfer function, demonstrating the applicability of our semantics in ensuring\\nsmart contract correctness. Our work lays the foundation for formally verified\\nparallel smart contracts, contributing to the security and scalability of\\nblockchain systems.\", \"main_category\": \"cs.PL\", \"categories\": \"cs.PL\", \"published\": \"2025-04-24T07:53:30Z\"}"}
