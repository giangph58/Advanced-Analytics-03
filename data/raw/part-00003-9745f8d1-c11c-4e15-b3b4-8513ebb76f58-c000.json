{"value":"{\"aid\": \"http://arxiv.org/abs/2504.12766v1\", \"title\": \"Falcon: Advancing Asynchronous BFT Consensus for Lower Latency and\\n  Enhanced Throughput\", \"summary\": \"Asynchronous Byzantine Fault Tolerant (BFT) consensus protocols have garnered\\nsignificant attention with the rise of blockchain technology. A typical\\nasynchronous protocol is designed by executing sequential instances of the\\nAsynchronous Common Sub-seQuence (ACSQ). The ACSQ protocol consists of two\\nprimary components: the Asynchronous Common Subset (ACS) protocol and a block\\nsorting mechanism, with the ACS protocol comprising two stages: broadcast and\\nagreement. However, current protocols encounter three critical issues: high\\nlatency arising from the execution of the agreement stage, latency instability\\ndue to the integral-sorting mechanism, and reduced throughput caused by block\\ndiscarding. To address these issues,we propose Falcon, an asynchronous BFT\\nprotocol that achieves low latency and enhanced throughput. Falcon introduces a\\nnovel broadcast protocol, Graded Broadcast (GBC), which enables a block to be\\nincluded in the ACS set directly, bypassing the agreement stage and thereby\\nreducing latency. To ensure safety, Falcon incorporates a new binary agreement\\nprotocol called Asymmetrical Asynchronous Binary Agreement (AABA), designed to\\ncomplement GBC. Additionally, Falcon employs a partial-sorting mechanism,\\nallowing continuous rather than simultaneous block committing, enhancing\\nlatency stability. Finally, we incorporate an agreement trigger that, before\\nits activation, enables nodes to wait for more blocks to be delivered and\\ncommitted, thereby boosting throughput. We conduct a series of experiments to\\nevaluate Falcon, demonstrating its superior performance.\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC\", \"published\": \"2025-04-17T09:03:55Z\"}"}
