{"value":"{\"aid\": \"http://arxiv.org/abs/2505.03624v1\", \"title\": \"ATRAF-driven IMRaD Methodology: Tradeoff and Risk Analysis of Software\\n  Architectures Across Abstraction Levels\", \"summary\": \"Software architecture research relies on key architectural artifacts --\\nSoftware Architectures, Reference Architectures, and Architectural Frameworks\\n-- that underpin the design and analysis of complex systems. Evaluating these\\nartifacts is essential to assess tradeoffs and risks affecting quality\\nattributes such as performance, modifiability, and security. Although\\nmethodologies like the Architecture Tradeoff Analysis Method (ATAM) support\\nsoftware architecture evaluation, their industrial focus misaligns with the\\nIMRaD (Introduction, Methods, Results, Discussion) format prevalent in academic\\nresearch, impeding transparency and reproducibility. Our prior work introduced\\nthe Architecture Tradeoff and Risk Analysis Framework (ATRAF), extending ATAM\\nthrough three methods -- ATRAM, RATRAM, and AFTRAM, addressing all abstraction\\nlevels, using a unified, iterative four-phase spiral model. These phases --\\nScenario and Requirements Gathering, Architectural Views and Scenario\\nRealization, Attribute-Specific Analyses, and Sensitivity, Tradeoff, and Risk\\nAnalysis -- ensure traceability and coherence. This paper presents the\\nATRAF-driven IMRaD Methodology, a concise method to align ATRAF's phases with\\nIMRaD sections. This methodology enhances the rigor, transparency, and\\naccessibility of software architecture research, enabling systematic reporting\\nof complex evaluations.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-05-06T15:22:28Z\"}"}
