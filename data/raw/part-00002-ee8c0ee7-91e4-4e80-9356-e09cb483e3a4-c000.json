{"value":"{\"aid\": \"http://arxiv.org/abs/2504.15141v1\", \"title\": \"Breaking Down Quantum Compilation: Profiling and Identifying Costly\\n  Passes\", \"summary\": \"With the increasing capabilities of quantum systems, the efficient, practical\\nexecution of quantum programs is becoming more critical. Each execution\\nincludes compilation time, which accounts for substantial overhead of the\\noverall program runtime. To address this challenge, proposals that leverage\\nprecompilation techniques have emerged, whereby entire circuits or select\\ncomponents are precompiled to mitigate the compilation time spent during\\nexecution. Considering the impact of compilation time on quantum program\\nexecution, identifying the contribution of each individual compilation task to\\nthe execution time is necessary in directing the community's research efforts\\ntowards the development of an efficient compilation and execution pipeline. In\\nthis work, we perform a preliminary analysis of the quantum circuit compilation\\nprocess in Qiskit, examining the cumulative runtime of each individual\\ncompilation task and identifying the tasks that most strongly impact the\\noverall compilation time. Our results indicate that, as the desired level of\\noptimization increases, circuit optimization and gate synthesis passes become\\nthe dominant tasks in compiling a Quantum Fourier Transform, with individual\\npasses consuming up to 87% of the total compilation time. Mapping passes\\nrequire the most compilation time for a GHZ state preparation circuit,\\naccounting for over 99% of total compilation time.\", \"main_category\": \"quant-ph\", \"categories\": \"quant-ph,cs.ET\", \"published\": \"2025-04-21T14:45:01Z\"}"}
