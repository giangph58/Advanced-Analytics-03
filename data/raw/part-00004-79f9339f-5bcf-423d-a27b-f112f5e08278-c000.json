{"value":"{\"aid\": \"http://arxiv.org/abs/2504.17444v1\", \"title\": \"Encode the $\\\\forall\\\\exists$ Relational Hoare Logic into Standard Hoare\\n  Logic\", \"summary\": \"Verifying a real-world program's functional correctness can be decomposed\\ninto (1) a refinement proof showing that the program implements a more abstract\\nhigh-level program and (2) an algorithm correctness proof at the high level.\\nRelational Hoare logic serves as a powerful tool to establish refinement but\\noften necessitates formalization beyond standard Hoare logic. Particularly in\\nthe nondeterministic setting, the $\\\\forall\\\\exists$ relational Hoare logic is\\nrequired. Existing approaches encode this logic into a Hoare logic with ghost\\nstates and invariants, yet these extensions significantly increase\\nformalization complexity and soundness proof overhead. This paper proposes a\\ngeneric encoding theory that reduces the $\\\\forall\\\\exists$ relational Hoare\\nlogic to standard (unary) Hoare logic. Precisely, we propose to redefine the\\nvalidity of relational Hoare triples while reserving the original proof rules\\nand then encapsulate the $\\\\forall\\\\exists$ pattern within assertions. We have\\nproved that the validity of encoded standard Hoare triples is equivalent to the\\nvalidity of the desired relational Hoare triples. Moreover, the encoding theory\\ndemonstrates how common relational Hoare logic proof rules are indeed special\\ncases of standard Hoare logic proof rules, and relational proof steps\\ncorrespond to standard proof steps. Our theory enables standard Hoare logic to\\nprove $\\\\forall\\\\exists$ relational properties by defining a predicate Exec,\\nwithout requiring modifications to the logic framework or re-verification of\\nsoundness.\", \"main_category\": \"cs.PL\", \"categories\": \"cs.PL\", \"published\": \"2025-04-24T11:13:54Z\"}"}
