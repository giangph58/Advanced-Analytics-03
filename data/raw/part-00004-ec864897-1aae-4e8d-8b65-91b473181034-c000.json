{"value":"{\"aid\": \"http://arxiv.org/abs/2504.20563v1\", \"title\": \"Turing machines deciders, part I\", \"summary\": \"The Busy Beaver Challenge (or bbchallenge) aims at collaboratively solving\\nthe following conjecture: \\\"$S(5) = 47{,}176{,}870$\\\" [Rad\\\\'o, 1962], [Marxen and\\nBuntrock, 1990], [Aaronson, 2020]. This conjecture says that if a 5-state\\nTuring machine runs for more than 47,176,870 steps without halting, then it\\nwill never halt -- starting from the all-0 tape. Proving this conjecture\\namounts to deciding whether 181,385,789 Turing machines with 5 states halt or\\nnot -- starting from the all-0 tape [bbchallenge, 2025]. To do so, we write\\n$\\\\textit{deciders}$: programs that take as input a Turing machine and output\\neither HALT, NONHALT, or UNKNOWN. Each decider is specialised in recognising a\\nparticular type of non-halting behavior.\\n  After two years of work, the Busy Beaver Challenge achieved its goal in July\\n2024 by delivering a proof of \\\"$S(5) = 47{,}176{,}870$\\\" formalised in Coq\\n[bbchallenge, 2025]. In this document, we present deciders that were developed\\nbefore the Coq proof and which were mainly not used in the proof; nonetheless,\\nthey are relevant techniques for analysing Turing machines. Part II of this\\nwork is the decider section of our paper showing \\\"$S(5) = 47{,}176{,}870$\\\"\\n[bbchallenge, 2025], presenting the deciders that were used in the Coq proof.\", \"main_category\": \"cs.LO\", \"categories\": \"cs.LO\", \"published\": \"2025-04-29T09:08:11Z\"}"}
