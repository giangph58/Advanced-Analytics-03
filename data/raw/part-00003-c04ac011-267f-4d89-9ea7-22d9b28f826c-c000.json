{"value":"{\"aid\": \"http://arxiv.org/abs/2504.15678v1\", \"title\": \"Zoozve: A Strip-Mining-Free RISC-V Vector Extension with Arbitrary\\n  Register Grouping Compilation Support (WIP)\", \"summary\": \"Vector processing is crucial for boosting processor performance and\\nefficiency, particularly with data-parallel tasks. The RISC-V \\\"V\\\" Vector\\nExtension (RVV) enhances algorithm efficiency by supporting vector registers of\\ndynamic sizes and their grouping. Nevertheless, for very long vectors, the\\nstatic number of RVV vector registers and its power-of-two grouping can lead to\\nperformance restrictions. To counteract this limitation, this work introduces\\nZoozve, a RISC-V vector instruction extension that eliminates the need for\\nstrip-mining. Zoozve allows for flexible vector register length and count\\nconfigurations to boost data computation parallelism. With a data-adaptive\\nregister allocation approach, Zoozve permits any register groupings and\\naccurately aligns vector lengths, cutting down register overhead and\\nalleviating performance declines from strip-mining. Additionally, the paper\\ndetails Zoozve's compiler and hardware implementations using LLVM and\\nSystemVerilog. Initial results indicate Zoozve yields a minimum 10.10$\\\\times$\\nreduction in dynamic instruction count for fast Fourier transform (FFT), with a\\nmere 5.2\\\\% increase in overall silicon area.\", \"main_category\": \"cs.PL\", \"categories\": \"cs.PL,cs.AR\", \"published\": \"2025-04-22T08:00:52Z\"}"}
