{"value":"{\"aid\": \"http://arxiv.org/abs/2504.17615v1\", \"title\": \"Linear-Time Multilevel Graph Partitioning via Edge Sparsification\", \"summary\": \"The current landscape of balanced graph partitioning is divided into\\nhigh-quality but expensive multilevel algorithms and cheaper approaches with\\nlinear running time, such as single-level algorithms and streaming algorithms.\\nWe demonstrate how to achieve the best of both worlds with a \\\\emph{linear time\\nmultilevel algorithm}. Multilevel algorithms construct a hierarchy of\\nincreasingly smaller graphs by repeatedly contracting clusters of nodes. Our\\napproach preserves their distinct advantage, allowing refinement of the\\npartition over multiple levels with increasing detail. At the same time, we use\\n\\\\emph{edge sparsification} to guarantee geometric size reduction between the\\nlevels and thus linear running time.\\n  We provide a proof of the linear running time as well as additional insights\\ninto the behavior of multilevel algorithms, showing that graphs with low\\nmodularity are most likely to trigger worst-case running time. We evaluate\\nmultiple approaches for edge sparsification and integrate our algorithm into\\nthe state-of-the-art multilevel partitioner KaMinPar, maintaining its excellent\\nparallel scalability. As demonstrated in detailed experiments, this results in\\na $1.49\\\\times$ average speedup (up to $4\\\\times$ for some instances) with only\\n1\\\\% loss in solution quality. Moreover, our algorithm clearly outperforms\\nstate-of-the-art single-level and streaming approaches.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS\", \"published\": \"2025-04-24T14:39:16Z\"}"}
