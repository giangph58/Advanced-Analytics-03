{"value":"{\"aid\": \"http://arxiv.org/abs/2504.20555v1\", \"title\": \"From regular expressions to deterministic finite automata:\\n  $2^{\\\\frac{n}{2}+\\\\sqrt{n}(\\\\log n)^{\\u0398(1)}}$ states are necessary and\\n  sufficient\", \"summary\": \"It is proved that every regular expression of alphabetic width $n$, that is,\\nwith $n$ occurrences of symbols of the alphabet, can be transformed into a\\ndeterministic finite automaton (DFA) with $2^{\\\\frac{n}{2}+(\\\\frac{\\\\log_2\\ne}{2\\\\sqrt{2}}+o(1))\\\\sqrt{n\\\\ln n}}$ states recognizing the same language (the\\nbest upper bound up to date is $2^n$). At the same time, it is also shown that\\nthis bound is close to optimal, namely, that there exist regular expressions of\\nalphabetic width $n$ over a two-symbol alphabet, such that every DFA for the\\nsame language has at least $2^{\\\\frac{n}{2}+(\\\\sqrt{2} + o(1))\\\\sqrt{\\\\frac{n}{\\\\ln\\nn}}}$ states (the previously known lower bound is\\n$\\\\frac{5}{4}2^{\\\\frac{n}{2}}$). The same bounds are obtained for an intermediate\\nproblem of determinizing nondetermistic finite automata (NFA) with each state\\nhaving all incoming transitions by the same symbol.\", \"main_category\": \"cs.FL\", \"categories\": \"cs.FL\", \"published\": \"2025-04-29T08:56:36Z\"}"}
