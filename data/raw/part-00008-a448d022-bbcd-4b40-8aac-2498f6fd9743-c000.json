{"value":"{\"aid\": \"http://arxiv.org/abs/2504.17338v1\", \"title\": \"Dynamic Approximate Maximum Matching in the Distributed Vertex Partition\\n  Model\", \"summary\": \"We initiate the study of approximate maximum matching in the vertex partition\\nmodel, for graphs subject to dynamic changes. We assume that the $n$ vertices\\nof the graph are partitioned among $k$ players, who execute a distributed\\nalgorithm and communicate via message passing. An adaptive adversary may\\nperform dynamic updates to the graph topology by inserting or removing edges\\nbetween the nodes, and the algorithm needs to respond to these changes by\\nadapting the output of the players, with the goal of maintaining an approximate\\nmaximum matching. The main performance metric in this setting is the\\nalgorithm's update time, which corresponds to the number of rounds required for\\nupdating the solution upon an adversarial change. For the standard setting of\\nsingle-edge insertions and deletions, we obtain the following results:\\n  We give a randomized Las Vegas algorithm with an expected update time of $O(\\n\\\\frac{\\\\sqrt{m}}{\\\\beta k} )$ rounds that maintains a $\\\\frac{2}{3}$-approximate\\nmaximum matching that is also maximal, where $m$ is the number of edges of the\\ngraph. We also show that any algorithm has a worst case update time of $\\\\Omega(\\n\\\\frac{n}{\\\\beta k^2\\\\log n} )$, assuming a link bandwidth of $O(\\\\beta\\\\log n)$\\nbits per round, if it maintains a matching that is maximal and does not have\\nany 3-augmenting paths. For batch-dynamic updates, where the adversary may\\nmodify up to $\\\\ell\\\\ge 1$ edges at once, we prove the following: There is a\\nrandomized algorithm that succeeds with high probability in maintaining a\\n$\\\\frac{2}{3}$-approximate maximum matching and has a worst case update time of\\n$\\\\Omega( \\\\frac{\\\\ell\\\\log n}{\\\\sqrt{\\\\beta k}} )$ rounds. We show that $\\\\Omega(\\n\\\\frac{\\\\ell}{\\\\beta k \\\\log n} )$ poses a lower bound for maintaining a maximal\\nmatching without 3-augmenting paths.\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC,cs.DS\", \"published\": \"2025-04-24T07:56:21Z\"}"}
