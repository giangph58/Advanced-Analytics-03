{"value":"{\"aid\": \"http://arxiv.org/abs/2504.21520v1\", \"title\": \"Padding Matters -- Exploring Function Detection in PE Files\", \"summary\": \"Function detection is a well-known problem in binary analysis. While previous\\nresearch has primarily focused on Linux/ELF, Windows/PE binaries have been\\noverlooked or only partially considered. This paper introduces FuncPEval, a new\\ndataset for Windows x86 and x64 PE files, featuring Chromium and the Conti\\nransomware, along with ground truth data for 1,092,820 function starts.\\nUtilizing FuncPEval, we evaluate five heuristics-based (Ghidra, IDA, Nucleus,\\nrev.ng, SMDA) and three machine-learning-based (DeepDi, RNN, XDA) function\\nstart detection tools. Among the tested tools, IDA achieves the highest\\nF1-score (98.44%) for Chromium x64, while DeepDi closely follows (97%) but\\nstands out as the fastest by a significant margin. Working towards\\nexplainability, we examine the impact of padding between functions on the\\ndetection results. Our analysis shows that all tested tools, except rev.ng, are\\nsusceptible to randomized padding. The randomized padding significantly\\ndiminishes the effectiveness for the RNN, XDA, and Nucleus. Among the\\nlearning-based tools, DeepDi exhibits the least sensitivity and demonstrates\\noverall the fastest performance, while Nucleus is the most adversely affected\\namong non-learning-based tools. In addition, we improve the recurrent neural\\nnetwork (RNN) proposed by Shin et al. and enhance the XDA tool, increasing the\\nF1-score by approximately 10%.\", \"main_category\": \"cs.CR\", \"categories\": \"cs.CR\", \"published\": \"2025-04-30T11:15:09Z\"}"}
