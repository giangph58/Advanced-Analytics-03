{"value":"{\"aid\": \"http://arxiv.org/abs/2504.19486v1\", \"title\": \"The Cost of Performance: Breaking ThreadX with Kernel Object\\n  Masquerading Attacks\", \"summary\": \"Microcontroller-based IoT devices often use embedded real-time operating\\nsystems (RTOSs). Vulnerabilities in these embedded RTOSs can lead to\\ncompromises of those IoT devices. Despite the significance of security\\nprotections, the absence of standardized security guidelines results in various\\nlevels of security risk across RTOS implementations. Our initial analysis\\nreveals that popular RTOSs such as FreeRTOS lack essential security\\nprotections. While Zephyr OS and ThreadX are designed and implemented with\\nessential security protections, our closer examination uncovers significant\\ndifferences in their implementations of system call parameter sanitization. We\\nidentify a performance optimization practice in ThreadX that introduces\\nsecurity vulnerabilities, allowing for the circumvention of parameter\\nsanitization processes. Leveraging this insight, we introduce a novel attack\\nnamed the Kernel Object Masquerading (KOM) Attack (as the attacker needs to\\nmanipulate one or multiple kernel objects through carefully selected system\\ncalls to launch the attack), demonstrating how attackers can exploit these\\nvulnerabilities to access sensitive fields within kernel objects, potentially\\nleading to unauthorized data manipulation, privilege escalation, or system\\ncompromise. We introduce an automated approach involving under-constrained\\nsymbolic execution to identify the KOM attacks and to understand the\\nimplications. Experimental results demonstrate the feasibility of KOM attacks\\non ThreadX-powered platforms. We reported our findings to the vendors, who\\nrecognized the vulnerabilities, with Amazon and Microsoft acknowledging our\\ncontribution on their websites.\", \"main_category\": \"cs.CR\", \"categories\": \"cs.CR\", \"published\": \"2025-04-28T05:01:35Z\"}"}
