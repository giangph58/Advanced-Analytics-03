{"value":"{\"aid\": \"http://arxiv.org/abs/2504.09989v1\", \"title\": \"FTHP-MPI: Towards Providing Replication-based Fault Tolerance in a\\n  Fault-Intolerant Native MPI Library\", \"summary\": \"Faults in high-performance systems are expected to be very large in the\\ncurrent exascale computing era. To compensate for a higher failure rate, the\\nstandard checkpoint/restart technique would need to create checkpoints at a\\nmuch higher frequency resulting in an excessive amount of overhead which would\\nnot be sustainable for many scientific applications. To improve application\\nefficiency in such high failure environments, the mechanism of replication of\\nMPI processes was proposed. Replication allows for fast recovery from failures\\nby simply dropping the failed processes and using their replicas to continue\\nthe regular operation of the application.\\n  In this paper, we have implemented FTHP-MPI (Fault Tolerance and High\\nPerformance MPI), a novel fault-tolerant MPI library that augments\\ncheckpoint/restart with replication to provide resilience from failures. The\\nnovelty of our work is that it is designed to provide fault tolerance in a\\nnative MPI library that does not provide support for fault tolerance. This lets\\napplication developers achieve fault tolerance at high failure rates while also\\nusing efficient communication protocols in the native MPI libraries that are\\ngenerally fine-tuned for specific HPC platforms. We have also implemented\\nefficient parallel communication techniques that involve replicas. Our\\nframework deals with the unique challenges of integrating support for\\ncheckpointing and partial replication.\\n  We conducted experiments emulating the failure rates of exascale computing\\nsystems with three applications, HPCG, PIC and CloverLeaf. We show that for\\nlarge scale systems where the failure intervals are expected to be within a\\nhour, our replication-based library provides higher efficiency and performance\\nthan checkpointing-based approaches. We show that under failure-free\\nconditions, the additional overheads due to replication are negligible in our\\nlibrary.\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC\", \"published\": \"2025-04-14T08:52:35Z\"}"}
