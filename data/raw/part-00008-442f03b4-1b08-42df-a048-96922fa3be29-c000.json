{"value":"{\"aid\": \"http://arxiv.org/abs/2504.20653v1\", \"title\": \"ComplexVCoder: An LLM-Driven Framework for Systematic Generation of\\n  Complex Verilog Code\", \"summary\": \"Recent advances have demonstrated the promising capabilities of large\\nlanguage models (LLMs) in generating register-transfer level (RTL) code, such\\nas Verilog. However, existing LLM-based frameworks still face significant\\nchallenges in accurately handling the complexity of real-world RTL designs,\\nparticularly those that are large-scale and involve multi-level module\\ninstantiations. To address this issue, we present ComplexVCoder, an open-source\\nLLM-driven framework that enhances both the generation quality and efficiency\\nof complex Verilog code. Specifically, we introduce a two-stage generation\\nmechanism, which leverages an intermediate representation to enable a more\\naccurate and structured transition from natural language descriptions to\\nintricate Verilog designs. In addition, we introduce a rule-based alignment\\nmethod and a domain-specific retrieval-augmented generation (RAG) to further\\nimprove the correctness of the synthesized code by incorporating relevant\\ndesign knowledge during generation. To evaluate our approach, we construct a\\ncomprehensive dataset comprising 55 complex Verilog designs derived from\\nreal-world implementations. We also release an open-source benchmark suite for\\nsystematically assessing the quality of auto-generated RTL code together with\\nthe ComplexVCoder framework. Experimental results show that ComplexVCoder\\noutperforms SOTA frameworks such as CodeV and RTLCoder by 14.6% and 22.2%,\\nrespectively, in terms of function correctness on complex Verilog benchmarks.\\nFurthermore, ComplexVcoder achieves comparable generation performances in terms\\nof functionality correctness using a lightweight 32B model (Qwen2.5), rivaling\\nlarger-scale models such as GPT-3.5 and DeepSeek-V3.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE,cs.SY,eess.SY\", \"published\": \"2025-04-29T11:22:06Z\"}"}
