{"value":"{\"aid\": \"http://arxiv.org/abs/2504.04962v1\", \"title\": \"A refined operational semantics for FreeCHR\", \"summary\": \"Constraint Handling Rules (CHR) is a rule-based programming language that\\nwhich is typically embedded into a general-purpose language with a plethora of\\nimplementations. However, the existing implementations often re-invent the way\\nto embed CHR, which impedes maintenance and weakens assertions of correctness.\\nTo formalize and thereby unify the embedding of CHR into arbitrary host\\nlanguages, we recently introduced the framework FreeCHR and proved it to be a\\nvalid representation of classical CHR. Until now, this framework only includes\\na translation of the very abstract operational semantics of CHR which, due to\\nits abstract nature, introduces several practical issues. In this paper we\\npresent a definition of the refined operational semantics for FreeCHR and prove\\nit to be both, a valid concretization of the very abstract semantics of\\nFreeCHR, and an equivalent representation of the refined semantics of CHR. This\\nwill establish implementations of FreeCHR as equivalent in behavior and\\nexpressiveness to existing implementations of CHR. This is an extended preprint\\nof a paper submitted to the the 41st International Conference on Logic\\nProgramming.\", \"main_category\": \"cs.PL\", \"categories\": \"cs.PL\", \"published\": \"2025-04-07T11:51:07Z\"}"}
