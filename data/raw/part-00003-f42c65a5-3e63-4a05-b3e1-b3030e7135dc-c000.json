{"value":"{\"aid\": \"http://arxiv.org/abs/2505.03425v1\", \"title\": \"Directed Greybox Fuzzing via Large Language Model\", \"summary\": \"Directed greybox fuzzing (DGF) focuses on efficiently reaching specific\\nprogram locations or triggering particular behaviors, making it essential for\\ntasks like vulnerability detection and crash reproduction. However, existing\\nmethods often suffer from path explosion and randomness in input mutation,\\nleading to inefficiencies in exploring and exploiting target paths. In this\\npaper, we propose HGFuzzer, an automatic framework that leverages the large\\nlanguage model (LLM) to address these challenges. HGFuzzer transforms path\\nconstraint problems into targeted code generation tasks, systematically\\ngenerating test harnesses and reachable inputs to reduce unnecessary\\nexploration paths significantly. Additionally, we implement custom mutators\\ndesigned specifically for target functions, minimizing randomness and improving\\nthe precision of directed fuzzing. We evaluated HGFuzzer on 20 real-world\\nvulnerabilities, successfully triggering 17, including 11 within the first\\nminute, achieving a speedup of at least 24.8x compared to state-of-the-art\\ndirected fuzzers. Furthermore, HGFuzzer discovered 9 previously unknown\\nvulnerabilities, all of which were assigned CVE IDs, demonstrating the\\neffectiveness of our approach in identifying real-world vulnerabilities.\", \"main_category\": \"cs.CR\", \"categories\": \"cs.CR\", \"published\": \"2025-05-06T11:04:07Z\"}"}
