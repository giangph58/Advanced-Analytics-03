{"value":"{\"aid\": \"http://arxiv.org/abs/2504.16552v1\", \"title\": \"DTVM: Revolutionizing Smart Contract Execution with Determinism and\\n  Compatibility\", \"summary\": \"We introduce the DeTerministic Virtual Machine (DTVM) Stack, a\\nnext-generation smart contract execution framework designed to address critical\\nperformance, determinism, and ecosystem compatibility challenges in blockchain\\nnetworks. Building upon WebAssembly (Wasm) while maintaining full Ethereum\\nVirtual Machine (EVM) ABI compatibility, DTVM introduces a Deterministic Middle\\nIntermediate Representation (dMIR) and a hybrid lazy-JIT compilation engine to\\nbalance compilation speed and execution efficiency. DTVM further accommodates\\ndiverse instruction set architectures (e.g., EVM, RISC-V) through modular\\nadaptation layers. This enables seamless integration with DTVM's hybrid\\nlazy-JIT compilation engine, which dynamically optimizes performance while\\npreserving deterministic execution guarantees across heterogeneous\\nenvironments. The key contributions including: 1). The framework achieves up to\\n2$\\\\times$ acceleration over evmone in dominant Ethereum contract (e.g.\\nERC20/721/1155) execution and reduces fibonacci computation latency by\\n11.8$\\\\sim$40.5% compared to Wasm based VMs. 2). A novel trampoline hot-switch\\nmechanism enables sub-millisecond (0.95ms) post-deployment invocation times,\\noutperforming up to about 23$\\\\times$ in compilation and invocation efficiency.\\n3). It supports multi-language development (Solidity, C++, Rust, Java, Go, and\\nAssemblyScript) through unified bytecode conversion while maintaining EVM ABI\\ncompatibility for seamless invocation. It reduces machine code object sizes by\\n30.0$\\\\sim$72.6%, coupled with a minimized Trusted Computing Base. 4). It offers\\nSmartCogent, an AI-driven full-stack development experience, leveraging\\nfine-tuned LLMs and retrieval-augmented generation to automate tasks across the\\nsmart contract lifecycle: development, debugging, security auditing, and\\ndeployment. DTVM Stack has been open-sourced (https://github.com/DTVMStack).\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC\", \"published\": \"2025-04-23T09:28:09Z\"}"}
