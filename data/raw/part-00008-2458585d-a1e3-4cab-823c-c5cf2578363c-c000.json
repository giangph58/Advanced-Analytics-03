{"value":"{\"aid\": \"http://arxiv.org/abs/2504.19495v1\", \"title\": \"Adjusted Objects: An Efficient and Principled Approach to Scalable\\n  Programming (Extended Version)\", \"summary\": \"Parallel programs require software support to coordinate access to shared\\ndata. For this purpose, modern programming languages provide\\nstrongly-consistent shared objects. To account for their many usages, these\\nobjects offer a large API.However, in practice, each program calls only a tiny\\nfraction of the interface. Leveraging such an observation, we propose to tailor\\na shared object for a specific usage. We call this principle adjusted objects.\\nAdjusted objects already exist in the wild. This paper provides their first\\nsystematic study. We explain how everyday programmers already adjust common\\nshared objects (such as queues, maps, and counters) for better performance. We\\npresent the formal foundations of adjusted objects using a new tool to\\ncharacterize scalability, the indistinguishability graph. Leveraging this\\nstudy, we introduce a library named DEGO to inject adjusted objects in a Java\\nprogram. In micro-benchmarks, objects from the DEGO library improve the\\nperformance of standard JDK shared objects by up to two orders of magnitude. We\\nalso evaluate DEGO with a Retwis-like benchmark modeled after a social network\\napplication. On a modern server-class machine, DEGO boosts by up to 1.7x the\\nperformance of the benchmark.\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC\", \"published\": \"2025-04-28T05:30:43Z\"}"}
