{"value":"{\"aid\": \"http://arxiv.org/abs/2504.05718v1\", \"title\": \"CVA6-VMRT: A Modular Approach Towards Time-Predictable Virtual Memory in\\n  a 64-bit Application Class RISC-V Processor\", \"summary\": \"The increasing complexity of autonomous systems has driven a shift to\\nintegrated heterogeneous SoCs with real-time and safety demands. Ensuring\\ndeterministic WCETs and low-latency for critical tasks requires minimizing\\ninterference on shared resources like virtual memory. Existing techniques, such\\nas software coloring and memory replication, introduce significant area and\\nperformance overhead, especially with virtualized memory where address\\ntranslation adds latency uncertainty. To address these limitations, we propose\\nCVA6-VMRT, an extension of the open-source RISC-V CVA6 core, adding hardware\\nsupport for predictability in virtual memory access with minimal area overhead.\\nCVA6-VMRT features dynamically partitioned Translation Look-aside Buffers\\n(TLBs) and hybrid L1 cache/scratchpad memory (SPM) functionality. It allows\\nfine-grained per-thread control of resources, enabling the operating system to\\nmanage TLB replacements, including static overwrites, to ensure single-cycle\\naddress translation for critical memory regions. Additionally, CVA6-VMRT\\nenables runtime partitioning of data and instruction caches into cache and SPM\\nsections, providing low and predictable access times for critical data without\\nimpacting other accesses. In a virtualized setting, CVA6-VMRT enhances\\nexecution time determinism for critical guests by 94% during interference from\\nnon-critical guests, with minimal impact on their average absolute execution\\ntime compared to isolated execution of the critical guests only. This\\ninterference-aware behaviour is achieved with just a 4% area overhead and no\\ntiming penalty compared to the baseline CVA6 core.\", \"main_category\": \"cs.AR\", \"categories\": \"cs.AR\", \"published\": \"2025-04-08T06:38:27Z\"}"}
