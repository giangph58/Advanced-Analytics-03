{"value":"{\"aid\": \"http://arxiv.org/abs/2504.16536v1\", \"title\": \"Synthesiz3 This: an SMT-Based Approach for Synthesis with Uncomputable\\n  Symbols\", \"summary\": \"Program synthesis is the task of automatically constructing a program\\nconforming to a given specification. In this paper we focus on synthesis of\\nsingle-invocation recursion-free functions conforming to a specification given\\nas a logical formula in the presence of uncomputable symbols (i.e., symbols\\nused in the specification but not allowed in the resulting function). We\\napproach the problem via SMT-solving methods: we present a quantifier\\nelimination algorithm using model-based projections for both total and partial\\nfunction synthesis, working with theories of uninterpreted functions and linear\\narithmetic and their combination. For this purpose we also extend model-based\\nprojection to produce witnesses for these theories. Further, we present\\nprocedures tailored for the case of uniquely determined solutions. We\\nimplemented a prototype of the algorithms using the SMT-solver Z3,\\ndemonstrating their practicality.\", \"main_category\": \"cs.LO\", \"categories\": \"cs.LO\", \"published\": \"2025-04-23T09:06:26Z\"}"}
