{"value":"{\"aid\": \"http://arxiv.org/abs/2504.05738v1\", \"title\": \"LLM-assisted Mutation for Whitebox API Testing\", \"summary\": \"Cloud applications heavily rely on APIs to communicate with each other and\\nexchange data. To ensure the reliability of cloud applications, cloud providers\\nwidely adopt API testing techniques. Unfortunately, existing API testing\\napproaches are insufficient to reach strict conditions, a problem known as\\nfitness plateaus, due to the lack of gradient provided by coverage metrics. To\\naddress this issue, we propose MioHint, a novel white-box API testing approach\\nthat leverages the code comprehension capabilities of Large Language Model\\n(LLM) to boost API testing. The key challenge of LLM-based API testing lies in\\nsystem-level testing, which emphasizes the dependencies between requests and\\ntargets across functions and files, thereby making the entire codebase the\\nobject of analysis. However, feeding the entire codebase to an LLM is\\nimpractical due to its limited context length and short memory. MioHint\\naddresses this challenge by synergizing static analysis with LLMs. We retrieve\\nrelevant code with data-dependency analysis at the statement level, including\\ndef-use analysis for variables used in the target and function expansion for\\nsubfunctions called by the target.\\n  To evaluate the effectiveness of our method, we conducted experiments across\\n16 real-world REST API services. The findings reveal that MioHint achieves an\\naverage increase of 4.95% absolute in line coverage compared to the baseline,\\nEvoMaster, alongside a remarkable factor of 67x improvement in mutation\\naccuracy. Furthermore, our method successfully covers over 57% of hard-to-cover\\ntargets while in baseline the coverage is less than 10%.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-08T07:14:51Z\"}"}
