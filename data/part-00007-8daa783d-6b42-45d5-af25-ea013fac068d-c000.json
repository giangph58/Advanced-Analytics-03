{"value":"{\"aid\": \"http://arxiv.org/abs/2504.05204v1\", \"title\": \"Quantum Program Linting with LLMs: Emerging Results from a Comparative\\n  Study\", \"summary\": \"Ensuring the quality of quantum programs is increasingly important; however,\\ntraditional static analysis techniques are insufficient due to the unique\\ncharacteristics of quantum computing. Quantum-specific linting tools, such as\\nLintQ, have been developed to detect quantum-specific programming problems;\\nhowever, they typically rely on manually crafted analysis queries. The manual\\neffort required to update these tools limits their adaptability to evolving\\nquantum programming practices.\\n  To address this challenge, this study investigates the feasibility of\\nemploying Large Language Models (LLMs) to develop a novel linting technique for\\nquantum software development and explores potential avenues to advance linting\\napproaches. We introduce LintQ-LLM, an LLM-based linting tool designed to\\ndetect quantum-specific problems comparable to those identified by LintQ.\\nThrough an empirical comparative study using real-world Qiskit programs, our\\nresults show that LintQ-LLM is a viable solution that complements LintQ, with\\nparticular strengths in problem localization, explanation clarity, and\\nadaptability potential for emerging quantum programming frameworks, thus\\nproviding a basis for further research. Furthermore, this study discusses\\nseveral research opportunities for developing more advanced, adaptable, and\\nfeedback-aware quantum software quality assurance methods by leveraging LLMs.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-07T15:51:31Z\"}"}
