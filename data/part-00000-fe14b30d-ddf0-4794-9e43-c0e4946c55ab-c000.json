{"value":"{\"aid\": \"http://arxiv.org/abs/2504.01907v1\", \"title\": \"Build Code Needs Maintenance Too: A Study on Refactoring and Technical\\n  Debt in Build Systems\", \"summary\": \"In modern software engineering, build systems play the crucial role of\\nfacilitating the conversion of source code into software artifacts. Recent\\nresearch has explored high-level causes of build failures, but has largely\\noverlooked the structural properties of build files. Akin to source code, build\\nsystems face technical debt challenges that hinder maintenance and\\noptimization. While refactoring is often seen as a key tool for addressing\\ntechnical debt in source code, there is a significant research gap regarding\\nthe specific refactoring changes developers apply to build code and whether\\nthese refactorings effectively address technical debt. In this paper, we\\naddress this gap by examining refactorings applied to build scripts in\\nopen-source projects, covering the widely used build systems of Gradle, Ant,\\nand Maven. Additionally, we investigate whether these refactorings are used to\\ntackle technical debts in build systems. Our analysis was conducted on\\n\\\\totalCommits examined build-file-related commits. We identified\\n\\\\totalRefactoringCategories build-related refactorings, which we divided into\\n\\\\totalCategories main categories. These refactorings are organized into the\\nfirst empirically derived taxonomy of build system refactorings. Furthermore,\\nwe investigate how developers employ these refactoring types to address\\ntechnical debts via a manual commit-analysis and a developer survey. In this\\ncontext, we identified \\\\totalTechnicalDebts technical debts addressed by these\\nrefactorings and discussed their correlation with the different refactorings.\\nFinally, we introduce BuildRefMiner, an LLM-powered tool leveraging GPT-4o to\\nautomate the detection of refactorings within build systems. We evaluated its\\nperformance and found that it achieves an F1 score of \\\\toolFoneScore across all\\nbuild systems.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-02T17:07:38Z\"}"}
