{"value":"{\"aid\": \"http://arxiv.org/abs/2504.01367v1\", \"title\": \"Enhancing Computational Notebooks with Code+Data Space Versioning\", \"summary\": \"There is a gap between how people explore data and how Jupyter-like\\ncomputational notebooks are designed. People explore data nonlinearly, using\\nexecution undos, branching, and/or complete reverts, whereas notebooks are\\ndesigned for sequential exploration. Recent works like ForkIt are still\\ninsufficient to support these multiple modes of nonlinear exploration in a\\nunified way. In this work, we address the challenge by introducing\\ntwo-dimensional code+data space versioning for computational notebooks and\\nverifying its effectiveness using our prototype system, Kishuboard, which\\nintegrates with Jupyter. By adjusting code and data knobs, users of Kishuboard\\ncan intuitively manage the state of computational notebooks in a flexible way,\\nthereby achieving both execution rollbacks and checkouts across complex\\nmulti-branch exploration history. Moreover, this two-dimensional versioning\\nmechanism can easily be presented along with a friendly one-dimensional\\nhistory. Human subject studies indicate that Kishuboard significantly enhances\\nuser productivity in various data science tasks.\", \"main_category\": \"cs.HC\", \"categories\": \"cs.HC\", \"published\": \"2025-04-02T05:26:51Z\"}"}
