{"value":"{\"aid\": \"http://arxiv.org/abs/2504.02448v1\", \"title\": \"Towards Learning-Augmented Peer-to-Peer Networks: Self-Stabilizing Graph\\n  Linearization with Untrusted Advice\", \"summary\": \"Distributed peer-to-peer systems are widely popular due to their\\ndecentralized nature, which ensures that no peer is critical for the\\nfunctionality of the system. However, fully decentralized solutions are usually\\nmuch harder to design, and tend to have a much higher overhead compared to\\ncentralized approaches, where the peers are connected to a powerful server. On\\nthe other hand, centralized approaches have a single point of failure. Thus, is\\nthere some way to combine their advantages without inheriting their\\ndisadvantages? To that end, we consider a supervised peer-to-peer approach\\nwhere the peers can ask a potentially unreliable supervisor for advice. This is\\nin line with the increasingly popular algorithmic paradigm called algorithms\\nwith predictions or learning-augmented algorithms, but we are the first to\\nconsider it in the context of peer-to-peer networks.\\n  Specifically, we design self-stabilizing algorithms for the fundamental\\nproblem of distributed graph linearization, where peers are supposed to recover\\nthe \\\"sorted line\\\" network from any initial network after a transient fault.\\nWith the help of the supervisor, peers can recover the sorted line network in\\n$O(\\\\log n)$ time, if the advice is correct; otherwise, the algorithm retains\\nits original recovery time (i.e., without any supervisor). A crucial challenge\\nthat we overcome is to correctly compose multiple self-stabilizing algorithms,\\nthat is, one that processes and exploits the advice, and another that does not\\nrely on the advice at all. Our key technical contributions combine ideas from\\nthe fields of overlay networks and proof-labeling schemes. Finally, we give a\\nmatching lower bound of $\\\\Omega(\\\\log n)$ for the recovery time of any algorithm\\nif the advice can be corrupted, where $n$ is the network size.\", \"main_category\": \"cs.DC\", \"categories\": \"cs.DC\", \"published\": \"2025-04-03T10:07:41Z\"}"}
