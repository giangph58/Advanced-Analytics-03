{"value":"{\"aid\": \"http://arxiv.org/abs/2504.07472v1\", \"title\": \"HACMony: Automatically Testing Hopping-related Audio-stream Conflict\\n  Issues on HarmonyOS\", \"summary\": \"HarmonyOS is emerging as a popular distributed operating system for diverse\\nmobile devices. One of its standout features is app-hopping, which allows users\\nto seamlessly transition apps across different HarmonyOS devices. However, when\\napps playing audio streams hop between devices, they can easily trigger\\nHopping-related Audio-stream Conflict (HAC) scenarios. Improper resolution of\\nHAC will lead to significant HAC issues, which are harder to detect compared to\\nsingle-device audio-stream conflicts, due to the unclear semantics of\\nHarmonyOS's app-hopping mechanism and the lack of effective multi-app hopping\\ntesting methods. To fill the gap, this paper introduces an automated and\\nefficient approach to detecting HAC issues. We formalized the operational\\nsemantics of HarmonyOS's app-hopping mechanism for audio streams for the first\\ntime. Leveraging this formalization, we designed an Audio Service Transition\\nGraph (ASTG) to model the behaviors of audio-API-related services and proposed\\na model-based approach to detect HAC issues automatically. Our techniques were\\nimplemented in a tool, HACMony, and evaluated on 20 real-world HarmonyOS apps.\\nExperimental results reveal that 11 of the 20 apps exhibit HAC issues.\\nAdditionally, we summarized the detected issues into two typical types, namely\\nMOD and MOR, and analyzed their characteristics to assist and guide both app\\nand OS developers.\", \"main_category\": \"cs.SE\", \"categories\": \"cs.SE\", \"published\": \"2025-04-10T05:55:08Z\"}"}
