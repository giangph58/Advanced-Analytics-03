{"value":"{\"aid\": \"http://arxiv.org/abs/2504.02421v1\", \"title\": \"Edge-weighted balanced connected partitions: Hardness and formulations\", \"summary\": \"The balanced connected $k$-partition problem (BCP) is a classic problem which\\nconsists in partitioning the set of vertices of a vertex-weighted connected\\ngraph into a collection of $k$ sets such that each of them induces a connected\\nsubgraph of roughly the same weight. There exists a vast literature on BCP that\\nincludes hardness results, approximation algorithms, integer programming\\nformulations, and a polyhedral study. We investigate edge-weighted variants of\\nBCP where we are given a connected graph $G$, $k \\\\in \\\\mathbb{Z}_\\\\ge$, and an\\nedge-weight function $w \\\\colon E(G)\\\\to\\\\mathbb{Q}_\\\\ge$, and the goal is to\\ncompute a spanning $k$-forest $\\\\mathcal{T}$ of $G$ (i.e., a forest with exactly\\n$k$ trees) that minimizes the weight of the heaviest tree in $\\\\mathcal{T}$ in\\nthe min-max version, or maximizes the weight of the lightest tree in\\n$\\\\mathcal{T}$ in the max-min version. We show that both versions of this\\nproblem are $\\\\mathsf{NP}$-hard on complete graphs with $k=2$, unweighted split\\ngraphs, and unweighted bipartite graphs with $k\\\\geq 2$ fixed. Moreover, we\\nprove that these problems do not admit subexponential-time algorithms, unless\\nthe Exponential-Time Hypothesis fails. Finally, we devise compact and\\nnon-compact integer linear programming formulations, valid inequalities, and\\nseparation algorithms.\", \"main_category\": \"cs.DS\", \"categories\": \"cs.DS,cs.DM\", \"published\": \"2025-04-03T09:23:31Z\"}"}
