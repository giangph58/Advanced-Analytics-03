{"value":"{\"aid\": \"http://arxiv.org/abs/2504.02344v1\", \"title\": \"Boosting End-to-End Database Isolation Checking via Mini-Transactions\\n  (Extended Version)\", \"summary\": \"Transactional isolation guarantees are crucial for database correctness.\\nHowever, recent studies have uncovered numerous isolation bugs in production\\ndatabases. The common black-box approach to isolation checking stresses\\ndatabases with large, concurrent, randomized transaction workloads and verifies\\nwhether the resulting execution histories satisfy specified isolation levels.\\nFor strong isolation levels such as strict serializability, serializability,\\nand snapshot isolation, this approach often incurs significant end-to-end\\nchecking overhead during both history generation and verification.\\n  We address these inefficiencies through the novel design of Mini-Transactions\\n(MTs). MTs are compact, short transactions that execute much faster than\\ngeneral workloads, reducing overhead during history generation by minimizing\\ndatabase blocking and transaction retries. By leveraging MTs' read-modify-write\\npattern, we develop highly efficient algorithms to verify strong isolation\\nlevels in linear or quadratic time. Despite their simplicity, MTs are\\nsemantically rich and effectively capture common isolation anomalies described\\nin the literature.\\n  We implement our verification algorithms and an MT workload generator in a\\ntool called MTC. Experimental results show that MTC outperforms\\nstate-of-the-art tools in both history generation and verification. Moreover,\\nMTC can detect bugs across various isolation levels in production databases\\nwhile maintaining the effectiveness of randomized testing with general\\nworkloads, making it a cost-effective solution for black-box isolation\\nchecking.\", \"main_category\": \"cs.DB\", \"categories\": \"cs.DB,cs.SE\", \"published\": \"2025-04-03T07:26:00Z\"}"}
