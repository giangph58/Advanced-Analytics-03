{"value":"{\"aid\": \"http://arxiv.org/abs/2504.01481v1\", \"title\": \"Identifying Obfuscated Code through Graph-Based Semantic Analysis of\\n  Binary Code\", \"summary\": \"Protecting sensitive program content is a critical issue in various\\nsituations, ranging from legitimate use cases to unethical contexts.\\nObfuscation is one of the most used techniques to ensure such protection.\\nConsequently, attackers must first detect and characterize obfuscation before\\nlaunching any attack against it. This paper investigates the problem of\\nfunction-level obfuscation detection using graph-based approaches, comparing\\nalgorithms, from elementary baselines to promising techniques like GNN (Graph\\nNeural Networks), on different feature choices. We consider various obfuscation\\ntypes and obfuscators, resulting in two complex datasets. Our findings\\ndemonstrate that GNNs need meaningful features that capture aspects of function\\nsemantics to outperform baselines. Our approach shows satisfactory results,\\nespecially in a challenging 11-class classification task and in a practical\\nmalware analysis example.\", \"main_category\": \"cs.CR\", \"categories\": \"cs.CR,cs.LG,stat.ML\", \"published\": \"2025-04-02T08:36:27Z\"}"}
