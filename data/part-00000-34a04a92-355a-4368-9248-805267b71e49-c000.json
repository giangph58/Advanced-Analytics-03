{"value":"{\"aid\": \"http://arxiv.org/abs/2503.24036v1\", \"title\": \"Automated Discovery of Tactic Libraries for Interactive Theorem Proving\", \"summary\": \"Enabling more concise and modular proofs is essential for advancing formal\\nreasoning using interactive theorem provers (ITPs). Since many ITPs, such as\\nRocq and Lean, use tactic-style proofs, learning higher-level custom tactics is\\ncrucial for proof modularity and automation. This paper presents a novel\\napproach to tactic discovery, which leverages Tactic Dependence Graphs (TDGs)\\nto identify reusable proof strategies across multiple proofs. TDGs capture\\nlogical dependencies between tactic applications while abstracting away\\nirrelevant syntactic details, allowing for both the discovery of new tactics\\nand the refactoring of existing proofs into more modular forms. We have\\nimplemented this technique in a tool called TacMiner and compare it against an\\nanti-unification-based approach Peano to tactic discovery. Our evaluation\\ndemonstrates that TacMiner can learn 3x as many tactics as Peano and reduces\\nthe size of proofs by 26% across all benchmarks. Furthermore, our evaluation\\ndemonstrates the benefits of learning custom tactics for proof automation,\\nallowing a state-of-the-art proof automation tool to achieve a relative\\nincrease of 172% in terms of success rate.\", \"main_category\": \"cs.PL\", \"categories\": \"cs.PL\", \"published\": \"2025-03-31T13:00:29Z\"}"}
