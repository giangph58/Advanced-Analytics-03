{"value":"{\"aid\": \"http://arxiv.org/abs/2503.24286v1\", \"title\": \"Pyrometheus: Symbolic abstractions for XPU and automatically\\n  differentiated computation of combustion kinetics and thermodynamics\", \"summary\": \"The cost of combustion simulations is often dominated by the evaluation of\\nnet production rates of chemical species and mixture thermodynamics\\n(thermochemistry). Execution on computing accelerators (XPUs) like graphic\\nprocessing units (GPUs) can greatly reduce this cost. However, established\\nthermochemistry software is not readily portable to such devices or sacrifices\\nvaluable analytical forms that enable differentiation for sensitivity analysis\\nand implicit time integration. Symbolic abstractions are developed with\\ncorresponding transformations that enable computation on accelerators and\\nautomatic differentiation by avoiding premature specification of detail. The\\nsoftware package Pyrometheus is introduced as an implementation of these\\nabstractions and their transformations for combustion thermochemistry. The\\nformulation facilitates code generation from the symbolic representation of a\\nspecific thermochemical mechanism in multiple target languages, including\\nPython, C++, and Fortran. Computational concerns are separated: the generated\\ncode processes array-valued expressions but does not specify their semantics.\\nThese semantics are provided by compatible array libraries, such as NumPy,\\nPytato, and Google JAX. Thus, the generated code retains a symbolic\\nrepresentation of the thermochemistry, which translates to computation on\\naccelerators and CPUs and automatic differentiation. The design and operation\\nof these symbolic abstractions and their companion tool, Pyrometheus, are\\ndiscussed throughout. Roofline demonstrations show that the computation of\\nchemical source terms within MFC, a Fortran-based flow solver we link to\\nPyrometheus, is performant.\", \"main_category\": \"physics.comp-ph\", \"categories\": \"physics.comp-ph\", \"published\": \"2025-03-31T16:35:13Z\"}"}
